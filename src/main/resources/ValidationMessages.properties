# === RegisterDto / LoginDto / User ===
user.name.not-blank=Имя пользователя не может быть пустым
user.email.not-blank=Почта обязательна
user.email.invalid=Некорректная почта
user.password.not-blank=Пароль обязателен

# === GlobalExceptionHandler ===
handle.bad.credentials=Неверные учётные данные
handle.access.denied=Отказано в доступе
handle.entity.not.found=Запрошенный ресурс не найден
handle.data.integrity.violation=Нарушение ограничений базы данных
handle.illegal.argument=Некорректный запрос
handle.entity.exists=Сущность уже есть
handle.username.not.found=Пользователь не найден
handle.user.not.found.by.id=Пользователь не найден
handle.generic=Внутренняя ошибка сервера
handle.validation.error=Ошибка валидации
handle.handler.method.validation=Ошибка валидации параметров запроса

# === AdminController / ModeratorController ===
get.all.users=Список пользователей
get.user.by.id=Пользователь найден
ban.user=Пользователь заблокирован
increase.user=Пользователь повышен
decrease.user=Пользователь понижен
unban.user=Пользователь разблокирован
delete.user=Пользователь удалён
create.admin=Администратор создан
create.moder=Модератор создан

# === UserController ===
get.current.user=Текущий пользователь
password.changed.success=Пароль успешно изменён
user.password.old.not-blank=Введите старый пароль
user.password.new.not-blank=Введите новый пароль

# === AppLogController ===
logs.get.all=Список всех логов
logs.get.by.user=Логи пользователя

# === AuditController ===
audit.get.all=Весь аудит
audit.get.by.admin=Аудит администратора
  
  # === ExpenseController ===
expenses.report.ok=Отчёт расходов
expense.total.ok=Всего потрачено

# === DateRangeDto ===
is.valid.range=from должен быть раньше to
from.not.null=from не может быть null
to.not.null=to не может быть null