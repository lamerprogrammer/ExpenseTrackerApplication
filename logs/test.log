12:44:19.822 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
12:44:19.897 [main] INFO  test.controller.AdminControllerIT - Starting AdminControllerIT using Java 17.0.16 with PID 3252 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
12:44:19.901 [main] INFO  test.controller.AdminControllerIT - The following 1 profile is active: "test"
12:44:20.724 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
12:44:20.727 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
12:44:20.755 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
12:44:20.756 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
12:44:20.765 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 1 Elasticsearch repository interface.
12:44:20.769 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
12:44:20.773 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
12:44:20.777 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
12:44:20.781 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
12:44:21.383 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
12:44:21.391 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
12:44:21.393 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
12:44:21.393 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
12:44:21.430 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
12:44:21.430 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1516 ms
12:44:21.950 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
12:44:21.993 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
12:44:22.025 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
12:44:22.246 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
12:44:22.274 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
12:44:22.404 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1b826a22
12:44:22.405 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
12:44:22.432 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
12:44:22.456 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
12:44:23.207 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
12:44:23.207 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
12:44:23.399 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
12:44:23.399 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
12:44:23.642 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
12:44:23.696 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
12:44:23.900 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
12:44:23.999 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
12:44:24.054 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
12:44:24.092 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
12:44:24.124 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
12:44:24.138 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
12:44:24.306 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
12:44:24.306 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
12:44:24.306 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
12:44:24.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
12:44:24.306 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
12:44:24.363 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
12:44:24.370 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 52512 (http) with context path '/'
12:44:24.374 [main] INFO  test.controller.AdminControllerIT - Started AdminControllerIT in 4.811 seconds (process running for 6.125)
12:44:24.656 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:24.659 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:24.660 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:24.662 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:24.664 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:24.696 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
12:44:24.721 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:24.721 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Некорректная почта]
12:44:24.725 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:24.727 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4ddcd99e]
12:44:24.738 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@31b2ea1c,.*]; default message [Некорректная почта]] ]
12:44:24.863 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:24.863 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:24.863 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:24.863 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:24.863 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:24.863 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
12:44:24.863 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:24.863 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Почта обязательна]
12:44:24.863 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:24.863 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@692b7633]
12:44:24.867 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
12:44:24.907 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:24.907 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:24.907 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:24.907 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:24.907 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:24.908 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
12:44:24.909 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:24.909 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Некорректная почта]
12:44:24.909 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:24.909 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@108854a3]
12:44:24.910 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@31b2ea1c,.*]; default message [Некорректная почта]] ]
12:44:24.947 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:24.947 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:24.947 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:24.947 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:24.947 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:24.947 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
12:44:24.947 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:24.947 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Почта обязательна]
12:44:24.947 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:24.947 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@c90db7e]
12:44:24.947 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
12:44:25.017 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.050 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.059 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:25.059 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:25.059 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.059 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:25.059 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.060 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='c84bf3fe-fb9b-4d41-9760-4545a0124b47@example.com', password=**** (truncated)...]
12:44:25.061 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.066 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.137 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.152 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.157 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:25.212 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.214 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:25.216 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.217 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.223 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:25.223 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@66e35b8]
12:44:25.249 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:25.249 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:25.249 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.249 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:25.249 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.249 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='c84bf3fe-fb9b-4d41-9760-4545a0124b47@example.com', password=**** (truncated)...]
12:44:25.249 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.250 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.250 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.251 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.253 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:25.255 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
12:44:25.276 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/moderator message: Сущность уже есть
12:44:25.276 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.276 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@181ffaf0]
12:44:25.276 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
12:44:25.317 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.318 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.320 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/416/ban
12:44:25.320 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/416/ban
12:44:25.320 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.321 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/416/ban
12:44:25.321 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:25.321 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.322 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.322 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.323 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.325 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
12:44:25.348 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/416/ban message: Некорректный запрос
12:44:25.348 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.348 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@34390b51]
12:44:25.348 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
12:44:25.380 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.384 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.384 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/ban
12:44:25.384 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/ban
12:44:25.384 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.388 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/ban
12:44:25.388 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:25.388 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.388 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.388 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.388 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.392 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:25.396 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:25.425 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/ban message: Запрошенный ресурс не найден
12:44:25.426 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.426 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2a1ded4f]
12:44:25.426 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:25.462 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:25.462 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:25.462 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.462 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:25.463 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.463 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='19fe6d28-0865-4ad6-8bf3-61dfc7a9c93f@example.com', password=****}]
12:44:25.464 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:25.464 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Имя пользователя не может быть пустым]
12:44:25.464 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.464 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1de9051d]
12:44:25.464 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
12:44:25.502 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99999
12:44:25.502 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999
12:44:25.502 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.502 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99999
12:44:25.502 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
12:44:25.503 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.503 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.504 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:25.506 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
12:44:25.528 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999 message: Пользователь не найден
12:44:25.528 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.528 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@532f52f2]
12:44:25.528 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
12:44:25.567 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.568 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.570 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:25.571 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:25.571 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.571 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:25.571 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.571 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='ae97b1fd-8df9-4409-a8f1-119bb6edb52a@example.com', password=**** (truncated)...]
12:44:25.571 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.572 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.572 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.573 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.575 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:25.623 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.623 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:25.623 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.623 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.627 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:25.627 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@426a83e9]
12:44:25.651 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:25.711 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.712 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.714 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:25.714 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:25.714 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.714 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:25.714 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.715 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='e1493655-f520-4e79-b17e-22c9da52242e@example.com', password=**** (truncated)...]
12:44:25.715 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.715 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.716 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.717 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.718 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:25.764 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.768 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:25.769 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.770 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.772 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:25.772 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4f8f4845]
12:44:25.793 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:25.796 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:25.796 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.796 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:25.796 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.797 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='e1493655-f520-4e79-b17e-22c9da52242e@example.com', password=**** (truncated)...]
12:44:25.797 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.797 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.798 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.799 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.800 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:25.802 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
12:44:25.822 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/administrator message: Сущность уже есть
12:44:25.822 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.822 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@ae3c25c]
12:44:25.822 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
12:44:25.861 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.863 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.865 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:25.866 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:25.868 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/423/demote
12:44:25.868 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/423/demote
12:44:25.868 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.868 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/423/demote
12:44:25.868 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:25.869 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.869 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.870 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:25.871 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:25.872 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:25.874 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:25.874 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2a4817a9]
12:44:25.916 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:25.916 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:25.916 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.917 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:25.917 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.917 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='69e434cf-c907-440a-a85f-20696155b82a@example.com', password=**** (truncated)...]
12:44:25.917 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:25.917 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Пароль обязателен]
12:44:25.918 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.918 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@23d0c264]
12:44:25.918 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
12:44:25.954 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:25.954 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:25.954 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.954 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:25.954 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:25.954 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='2560eba6-9f86-4a4d-8af3-f9f47a4e332c@example.com', password=**** (truncated)...]
12:44:25.955 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:25.955 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Пароль обязателен]
12:44:25.955 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:25.955 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@129003e8]
12:44:25.956 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
12:44:25.991 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/-1
12:44:25.991 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/-1
12:44:25.991 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:25.991 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/-1
12:44:25.991 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
12:44:25.992 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.992 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:25.996 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
12:44:26.019 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/-1 message: должно быть больше 0
12:44:26.019 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.019 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@18a00991]
12:44:26.019 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
12:44:26.056 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.057 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.059 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/promote
12:44:26.060 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/promote
12:44:26.060 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.060 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/promote
12:44:26.060 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.060 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.060 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.061 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.062 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.063 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.065 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:26.086 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/promote message: Запрошенный ресурс не найден
12:44:26.086 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.086 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3daa823e]
12:44:26.086 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:26.125 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
12:44:26.125 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
12:44:26.125 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.125 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
12:44:26.125 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:26.126 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='21312e94-355d-4fa1-92e4-1d3f5ea07302@example.com', password=****}]
12:44:26.126 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:26.126 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Имя пользователя не может быть пустым]
12:44:26.126 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.126 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@75596228]
12:44:26.126 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
12:44:26.163 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.164 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.166 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/demote
12:44:26.166 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/demote
12:44:26.166 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.166 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/demote
12:44:26.166 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.166 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.167 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.167 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.169 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.169 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.171 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:26.193 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/demote message: Запрошенный ресурс не найден
12:44:26.193 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.193 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1001835e]
12:44:26.193 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:26.235 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.236 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.237 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.238 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.240 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/427/delete
12:44:26.240 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/427/delete
12:44:26.240 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.240 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/427/delete
12:44:26.241 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.241 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.241 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.242 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.243 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.244 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.246 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:26.251 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:26.254 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.254 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5c4f443c]
12:44:26.282 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:26.298 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.299 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.301 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/428/delete
12:44:26.301 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/428/delete
12:44:26.301 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.301 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/428/delete
12:44:26.301 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.301 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.301 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.302 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.303 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.304 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
12:44:26.327 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/428/delete message: Некорректный запрос
12:44:26.327 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.327 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@49174b0f]
12:44:26.327 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
12:44:26.363 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.364 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.366 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
12:44:26.366 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
12:44:26.367 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.367 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
12:44:26.367 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
12:44:26.367 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='1f7b4c07-41e3-4429-b2ba-2498465ce1fb@example.com', password=**** (truncated)...]
12:44:26.367 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.367 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.368 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.369 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.370 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:26.417 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.418 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:26.420 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.421 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.423 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.423 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3dc86219]
12:44:26.446 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:26.462 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.463 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.465 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.465 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.468 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/432/promote
12:44:26.468 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/432/promote
12:44:26.468 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.468 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/432/promote
12:44:26.468 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.468 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.468 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.469 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.470 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.471 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.472 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.472 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@47bd6d1f]
12:44:26.509 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.510 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.512 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users
12:44:26.512 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users
12:44:26.512 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.512 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users
12:44:26.512 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getAllUsers(Pageable, HttpServletRequest)
12:44:26.515 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.515 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.518 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
12:44:26.519 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.522 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.522 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@765916ef]
12:44:26.524 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

12:44:26.569 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.570 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.572 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/unban
12:44:26.572 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/unban
12:44:26.573 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.573 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/unban
12:44:26.573 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.573 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.573 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.574 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.575 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.576 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.577 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:26.601 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/unban message: Запрошенный ресурс не найден
12:44:26.601 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.601 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3c0e4560]
12:44:26.602 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:26.639 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.640 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.643 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.644 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.646 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/436/demote
12:44:26.646 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/436/demote
12:44:26.646 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.646 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/436/demote
12:44:26.646 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.647 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.647 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.648 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.648 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.649 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.651 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.651 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1cc53602]
12:44:26.694 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.695 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.697 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.698 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.701 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/438/ban
12:44:26.701 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/438/ban
12:44:26.701 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.701 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/438/ban
12:44:26.701 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.701 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.701 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.702 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.703 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.704 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.705 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:26.707 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:26.709 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.709 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7211208e]
12:44:26.732 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:26.734 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.749 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.750 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.753 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/439
12:44:26.753 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/439
12:44:26.753 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.753 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/439
12:44:26.753 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
12:44:26.753 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.753 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.753 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.755 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.755 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3eb2b076]
12:44:26.792 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.793 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.796 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/99999/delete
12:44:26.796 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/delete
12:44:26.796 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.796 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/99999/delete
12:44:26.796 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.797 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.797 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.797 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.798 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.799 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.800 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:26.824 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/delete message: Запрошенный ресурс не найден
12:44:26.825 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:26.825 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4a5b1a27]
12:44:26.825 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:26.864 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.865 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.867 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.868 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.871 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.872 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:26.875 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/442/unban
12:44:26.875 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/442/unban
12:44:26.875 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.875 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/442/unban
12:44:26.875 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.875 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.875 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.876 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.877 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.878 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.878 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:26.880 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:26.882 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.882 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7479bb0e]
12:44:26.905 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:26.906 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.922 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.923 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.925 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:26.926 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.928 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/444/promote
12:44:26.928 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/444/promote
12:44:26.928 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.928 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/444/promote
12:44:26.928 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:26.929 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.929 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
12:44:26.929 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:26.930 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:26.931 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:26.932 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:26.936 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:26.938 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:26.938 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4ff15e5b]
12:44:26.969 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs
12:44:26.969 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs
12:44:26.969 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:26.969 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs
12:44:26.970 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getAllLogs(Pageable, HttpServletRequest)
12:44:26.970 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
12:44:26.970 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
12:44:27.059 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.059 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@22b0e7e2]
12:44:27.091 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs/user/admin@example.com
12:44:27.091 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs/user/admin@example.com
12:44:27.091 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.091 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs/user/admin@example.com
12:44:27.091 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getByUser(String, Pageable, HttpServletRequest)
12:44:27.093 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
12:44:27.093 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
12:44:27.113 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.113 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2f42f229]
12:44:27.142 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:27.145 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
12:44:27.150 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
12:44:27.151 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.151 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.153 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.154 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.155 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.156 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.158 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.159 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.161 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.162 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.164 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:27.167 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
12:44:27.167 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
12:44:27.167 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.167 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
12:44:27.167 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
12:44:27.167 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.168 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.168 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
12:44:27.170 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.171 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.172 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.172 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@775037d8]
12:44:27.203 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:27.204 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
12:44:27.206 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
12:44:27.207 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.208 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.209 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.209 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.210 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.211 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.213 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.214 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.216 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.216 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.218 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:27.221 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/447
12:44:27.221 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/447
12:44:27.221 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.221 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/447
12:44:27.221 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
12:44:27.222 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.222 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.225 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
12:44:27.226 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.227 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.228 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.228 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@60353e6e]
12:44:27.253 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:27.254 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
12:44:27.256 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
12:44:27.257 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.257 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.258 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.259 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.260 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.261 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.263 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.264 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.265 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.266 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.268 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:27.376 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:27.379 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
12:44:27.379 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
12:44:27.379 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.379 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
12:44:27.379 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
12:44:27.380 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.380 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.380 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
12:44:27.382 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.383 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.384 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.384 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@183e67e1]
12:44:27.409 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:27.410 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
12:44:27.411 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
12:44:27.413 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
12:44:27.414 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.415 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.415 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.416 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
12:44:27.416 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.417 [main] DEBUG org.hibernate.SQL - delete from users where id=?
12:44:27.419 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.420 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.422 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.423 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.425 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:27.540 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:27.543 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/451
12:44:27.543 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/451
12:44:27.543 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.544 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/451
12:44:27.544 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
12:44:27.544 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.544 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
12:44:27.545 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
12:44:27.547 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.548 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.549 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.549 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1904d63e]
12:44:27.583 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
12:44:27.583 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
12:44:27.583 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.583 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:27.583 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
12:44:27.583 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
12:44:27.584 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='8d4fdae2-54f7-40b6-8c5b-1118475519eb', email='test-335c534b-fd71-4930-a010-5cb9e23 (truncated)...]
12:44:27.584 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-335c534b-fd71-4930-a010-5cb9e23aea86@example.com
12:44:27.584 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:27.631 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.633 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.635 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-335c534b-fd71-4930-a010-5cb9e23aea86@example.com
12:44:27.637 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.637 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@2c9d3e87]
12:44:27.674 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:27.674 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.676 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:27.677 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:27.679 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-335c534b-fd71-4930-a010-5cb9e23aea86@example.com
12:44:27.722 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
12:44:27.722 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
12:44:27.722 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.722 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:27.722 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
12:44:27.722 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
12:44:27.726 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTMzNWM1MzRiLWZkNzEtNDkzMC1hMDEwLTV (truncated)...]
12:44:27.726 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
12:44:27.726 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
12:44:27.746 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:27.749 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.750 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-335c534b-fd71-4930-a010-5cb9e23aea86@example.com заблокирован
12:44:27.750 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
12:44:27.771 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Отказано в доступе
12:44:27.772 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:27.772 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@467bb79f]
12:44:27.772 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Ваш аккаунт заблокирован]
12:44:27.798 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
12:44:27.798 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
12:44:27.798 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.798 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:27.798 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
12:44:27.798 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
12:44:27.798 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='cc0a7956-de2c-4170-b007-07be7c4021f5', email='test-031137db-6653-478e-bd2c-25628f3 (truncated)...]
12:44:27.799 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-031137db-6653-478e-bd2c-25628f385833@example.com
12:44:27.799 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:27.847 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:27.848 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:27.850 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-031137db-6653-478e-bd2c-25628f385833@example.com
12:44:27.850 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:27.850 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@2caedd9f]
12:44:27.874 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
12:44:27.874 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
12:44:27.874 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.874 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:27.874 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
12:44:27.874 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
12:44:27.875 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-031137db-6653-478e-bd2c-25628f385833@example.com, password=invalidPassword]]
12:44:27.876 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-031137db-6653-478e-bd2c-25628f385833@example.com
12:44:27.877 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:27.878 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:27.925 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: не верный пароль для почты test-031137db-6653-478e-bd2c-25628f385833@example.com
12:44:27.925 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
12:44:27.946 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
12:44:27.946 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:27.946 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@439dd7be]
12:44:27.946 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный пароль]
12:44:27.978 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
12:44:27.978 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
12:44:27.978 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:27.978 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:27.978 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
12:44:27.978 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
12:44:27.978 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-282ccde9-b5a5-48fd-bca1-39cc90afb484@example.com, password=123]]
12:44:27.978 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-282ccde9-b5a5-48fd-bca1-39cc90afb484@example.com
12:44:27.979 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:27.980 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: почта test-282ccde9-b5a5-48fd-bca1-39cc90afb484@example.com не найдена
12:44:27.980 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
12:44:28.005 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
12:44:28.005 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.005 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5bffe53b]
12:44:28.005 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверная почта]
12:44:28.032 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-cace0be6-4889-4ba9-86d9-1cd28f56d075@example.com
12:44:28.032 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
12:44:28.033 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
12:44:28.033 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.033 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.033 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
12:44:28.033 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
12:44:28.033 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWNhY2UwYmU2LTQ4ODktNGJhOS04NmQ5LTF (truncated)...]
12:44:28.033 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
12:44:28.033 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
12:44:28.034 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.035 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-cace0be6-4889-4ba9-86d9-1cd28f56d075@example.com не найден
12:44:28.035 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUsernameNotFound(UsernameNotFoundException, HttpServletRequest)
12:44:28.057 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Пользователь не найден
12:44:28.057 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.057 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1bb03b9b]
12:44:28.057 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.core.userdetails.UsernameNotFoundException: Пользователь не найден]
12:44:28.081 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
12:44:28.081 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
12:44:28.081 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.081 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.081 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
12:44:28.081 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
12:44:28.082 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com', passwor (truncated)...]
12:44:28.082 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.082 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:28.130 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.131 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.133 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.133 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:28.133 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@207a20dc]
12:44:28.155 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
12:44:28.155 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
12:44:28.155 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.155 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.155 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
12:44:28.155 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
12:44:28.156 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com, password=123]]
12:44:28.156 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.156 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.157 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.206 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная авторизация: test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.206 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.207 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.208 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:28.209 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWU2ODk5YjkzLWY5M2MtNDM2NC04N2Y5LTU3Y (truncated)...]
12:44:28.241 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
12:44:28.241 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
12:44:28.241 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.241 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.241 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
12:44:28.242 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
12:44:28.242 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWU2ODk5YjkzLWY5M2MtNDM2NC04N2Y5LTU (truncated)...]
12:44:28.242 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
12:44:28.242 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
12:44:28.243 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.244 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.244 [main] INFO  c.e.e.service.AuthServiceImpl - Успешное обновление токена, пользователя test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.244 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.245 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-e6899b93-f93c-4364-87f9-57a6ecd2dad6@example.com
12:44:28.245 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:28.245 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWU2ODk5YjkzLWY5M2MtNDM2NC04N2Y5LTU3Y (truncated)...]
12:44:28.269 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
12:44:28.269 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
12:44:28.269 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.269 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.269 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
12:44:28.269 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
12:44:28.269 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=invalidToken]]
12:44:28.269 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
12:44:28.269 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
12:44:28.269 [main] ERROR c.e.e.service.AuthServiceImpl - Ошибка обновление токена, пользователя Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.expensetracker.security.JwtUtil.parse(JwtUtil.java:63)
	at com.example.expensetracker.service.AuthServiceImpl.refresh(AuthServiceImpl.java:81)
	at com.example.expensetracker.controller.AuthController.refresh(AuthController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.example.expensetracker.logging.applog.AppLogFilter.doFilterInternal(AppLogFilter.java:30)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.expensetracker.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at test.controller.AuthControllerIT.refresh_shouldReturnUnauthorized_whenTokenInvalid(AuthControllerIT.java:156)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
12:44:28.273 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
12:44:28.343 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Неверные учётные данные
12:44:28.344 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.344 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2f75f933]
12:44:28.344 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Невалидный токен]
12:44:28.372 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
12:44:28.372 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
12:44:28.372 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.372 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.372 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
12:44:28.372 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
12:44:28.372 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-0b545139-c135-4bfc-9f4d-7b56a2cba3a4@example.com', passwor (truncated)...]
12:44:28.372 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-0b545139-c135-4bfc-9f4d-7b56a2cba3a4@example.com
12:44:28.372 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:28.421 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.424 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.426 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-0b545139-c135-4bfc-9f4d-7b56a2cba3a4@example.com
12:44:28.426 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:28.426 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@277b4a42]
12:44:28.456 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
12:44:28.456 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
12:44:28.456 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.456 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.456 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
12:44:28.456 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
12:44:28.456 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-0b545139-c135-4bfc-9f4d-7b56a2cba3a4@example.com', passwor (truncated)...]
12:44:28.456 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-0b545139-c135-4bfc-9f4d-7b56a2cba3a4@example.com
12:44:28.457 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
12:44:28.458 [main] WARN  c.e.e.service.AuthServiceImpl - Регистрации провалилась: почта test-0b545139-c135-4bfc-9f4d-7b56a2cba3a4@example.com уже используется
12:44:28.458 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleDataIntegrityViolation(DataIntegrityViolationException, HttpServletRequest)
12:44:28.478 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/register message: Нарушение ограничений базы данных
12:44:28.483 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.483 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4ae1b9dd]
12:44:28.483 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: Эта почта уже используется]
12:44:28.510 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
12:44:28.510 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
12:44:28.510 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.510 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:28.510 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
12:44:28.511 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
12:44:28.511 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='', password=****}]
12:44:28.511 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
12:44:28.511 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=anonymous path=/api/auth/register errors=[Почта обязательна]
12:44:28.511 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.511 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3ffd9e3b]
12:44:28.512 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.model.User> com.example.expensetracker.controller.AuthController.register(com.example.expensetracker.dto.RegisterDto): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
12:44:28.555 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.556 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.559 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.559 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.562 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/457/ban
12:44:28.562 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/457/ban
12:44:28.562 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.562 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/457/ban
12:44:28.562 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:28.563 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.563 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.565 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.566 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.567 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:28.568 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
12:44:28.594 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/457/ban message: Отказано в доступе
12:44:28.594 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.594 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@32ad3c73]
12:44:28.594 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
12:44:28.634 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.635 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.637 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.638 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.639 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/459/ban
12:44:28.640 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/459/ban
12:44:28.640 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.640 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/459/ban
12:44:28.640 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:28.640 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.640 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.641 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.642 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.642 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:28.644 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
12:44:28.665 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/459/ban message: Отказано в доступе
12:44:28.665 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.665 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3b9456d7]
12:44:28.666 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
12:44:28.703 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.704 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.706 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/461/ban
12:44:28.707 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/461/ban
12:44:28.707 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.707 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/461/ban
12:44:28.707 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:28.707 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.707 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.708 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.709 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.710 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
12:44:28.737 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/461/ban message: Некорректный запрос
12:44:28.737 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.737 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@49abd9e8]
12:44:28.738 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
12:44:28.774 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.775 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.777 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
12:44:28.777 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
12:44:28.777 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.777 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
12:44:28.777 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:28.777 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.777 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.778 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:28.779 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.780 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:28.781 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:28.801 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
12:44:28.801 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.801 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4ed4b3ca]
12:44:28.801 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:28.840 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
12:44:28.840 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
12:44:28.840 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.840 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
12:44:28.840 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
12:44:28.841 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.841 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.841 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:28.843 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
12:44:28.865 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
12:44:28.865 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.865 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4d7d9b07]
12:44:28.865 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
12:44:28.902 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
12:44:28.902 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
12:44:28.902 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.902 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
12:44:28.902 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
12:44:28.903 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.903 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.903 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
12:44:28.925 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
12:44:28.925 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:28.925 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7720ec5]
12:44:28.926 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
12:44:28.962 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:28.963 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:28.965 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
12:44:28.965 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
12:44:28.965 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:28.965 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
12:44:28.965 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
12:44:28.966 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.966 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:28.967 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
12:44:28.967 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:28.969 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:28.969 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@64a21865]
12:44:29.006 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.008 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.010 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
12:44:29.010 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
12:44:29.010 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.010 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
12:44:29.010 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:29.011 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.011 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.011 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:29.012 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:29.013 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.015 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
12:44:29.042 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
12:44:29.042 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
12:44:29.042 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@62a39545]
12:44:29.043 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
12:44:29.078 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.079 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.081 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.082 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.084 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/465/ban
12:44:29.084 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/465/ban
12:44:29.084 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.084 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/465/ban
12:44:29.084 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:29.084 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.084 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.085 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:29.086 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:29.087 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.088 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:29.090 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:29.091 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:29.091 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@526ca52f]
12:44:29.112 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:29.113 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.129 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.131 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.132 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/467
12:44:29.132 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/467
12:44:29.132 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.132 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/467
12:44:29.133 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
12:44:29.133 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.133 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.133 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.135 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:29.135 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@53f9ccbe]
12:44:29.171 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.172 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.174 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.175 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:29.177 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.178 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.180 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/468/unban
12:44:29.180 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/468/unban
12:44:29.180 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.180 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/468/unban
12:44:29.180 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
12:44:29.181 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.181 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
12:44:29.181 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:29.182 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:29.183 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.184 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
12:44:29.185 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
12:44:29.187 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:29.187 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1674b254]
12:44:29.210 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
12:44:29.210 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
12:44:29.229 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.230 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.232 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
12:44:29.232 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
12:44:29.232 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.232 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
12:44:29.232 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
12:44:29.235 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:29.236 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:29.238 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:29.238 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@40f8a7a4]
12:44:29.276 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.277 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.279 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
12:44:29.279 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
12:44:29.279 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.279 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
12:44:29.279 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
12:44:29.280 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:29.281 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:29.281 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:29.282 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5f090522]
12:44:29.318 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
12:44:29.319 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
12:44:29.319 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.319 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
12:44:29.333 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
12:44:29.334 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
12:44:29.336 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
12:44:29.336 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
12:44:29.336 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
12:44:29.336 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
12:44:29.336 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
12:44:29.337 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
12:44:29.338 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
12:44:29.339 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
12:44:29.339 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@49324087]
12:44:29.367 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
12:44:29.493 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
12:44:29.497 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
12:44:29.497 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
12:44:29.497 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
