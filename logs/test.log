15:48:41.813 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
15:48:41.892 [main] INFO  test.controller.AdminControllerIT - Starting AdminControllerIT using Java 17.0.16 with PID 15200 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
15:48:41.896 [main] INFO  test.controller.AdminControllerIT - The following 1 profile is active: "test"
15:48:42.756 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
15:48:42.761 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
15:48:42.791 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
15:48:42.795 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.ExpenseRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
15:48:42.795 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
15:48:42.806 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 1 Elasticsearch repository interface.
15:48:42.814 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
15:48:42.814 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:48:42.823 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
15:48:42.824 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
15:48:43.501 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
15:48:43.510 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
15:48:43.510 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
15:48:43.510 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
15:48:43.550 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
15:48:43.550 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1642 ms
15:48:44.060 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
15:48:44.189 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@45050433
15:48:44.189 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
15:48:44.319 [main] INFO  liquibase.database - Set default schema name to public
15:48:44.663 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
15:48:44.743 [main] INFO  liquibase.ui - Database is up to date, no changesets to execute
15:48:44.745 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
15:48:44.754 [main] INFO  liquibase.util - UPDATE SUMMARY
15:48:44.754 [main] INFO  liquibase.util - Run:                          0
15:48:44.754 [main] INFO  liquibase.util - Previously run:               5
15:48:44.754 [main] INFO  liquibase.util - Filtered out:                 0
15:48:44.754 [main] INFO  liquibase.util - -------------------------------
15:48:44.754 [main] INFO  liquibase.util - Total change sets:            5
15:48:44.755 [main] INFO  liquibase.util - Update summary generated
15:48:44.756 [main] INFO  liquibase.command - Command execution complete
15:48:45.426 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
15:48:45.464 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
15:48:45.489 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
15:48:45.701 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
15:48:45.744 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
15:48:45.756 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
15:48:46.480 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
15:48:46.481 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:48:46.637 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
15:48:46.637 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
15:48:46.752 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
15:48:47.544 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15:48:47.604 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
15:48:47.840 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
15:48:47.956 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
15:48:48.013 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
15:48:48.082 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
15:48:48.131 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
15:48:48.153 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
15:48:48.321 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
15:48:48.321 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
15:48:48.321 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
15:48:48.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
15:48:48.321 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
15:48:48.355 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
15:48:48.362 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54228 (http) with context path '/'
15:48:48.369 [main] INFO  test.controller.AdminControllerIT - Started AdminControllerIT in 6.825 seconds (process running for 8.197)
15:48:48.660 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:48.664 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:48.664 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:48.666 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:48.668 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:48.709 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
15:48:48.731 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:48.732 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Некорректная почта]
15:48:48.736 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:48.736 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4dae0050]
15:48:48.744 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@7489b9e,.*]; default message [Некорректная почта]] ]
15:48:48.866 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:48.866 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:48.867 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:48.867 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:48.867 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:48.868 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
15:48:48.868 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:48.868 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Почта обязательна]
15:48:48.869 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:48.869 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5b32369a]
15:48:48.869 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
15:48:48.914 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:48.914 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:48.914 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:48.915 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:48.915 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:48.916 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
15:48:48.916 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:48.916 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Некорректная почта]
15:48:48.917 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:48.917 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1adc896a]
15:48:48.917 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@7489b9e,.*]; default message [Некорректная почта]] ]
15:48:48.961 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:48.961 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:48.961 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:48.961 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:48.961 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:48.962 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
15:48:48.962 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:48.962 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Почта обязательна]
15:48:48.962 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:48.962 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3c1d57e2]
15:48:48.963 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
15:48:49.036 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.064 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.065 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.070 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:49.070 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:49.070 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.070 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:49.070 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:49.071 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='6d6352d4-b8ab-45b5-bfb8-a43d88e386c1@example.com', password=**** (truncated)...]
15:48:49.072 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.077 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.122 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.136 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.138 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:49.196 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.197 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:49.199 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.200 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.206 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:49.206 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@14df00d1]
15:48:49.233 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:49.233 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:49.233 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.233 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:49.233 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:49.234 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='6d6352d4-b8ab-45b5-bfb8-a43d88e386c1@example.com', password=**** (truncated)...]
15:48:49.234 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.234 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.235 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.236 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.238 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:49.240 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
15:48:49.262 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/moderator message: Сущность уже есть
15:48:49.263 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:49.263 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1ea1e371]
15:48:49.263 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
15:48:49.305 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.306 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.306 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.309 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/222/ban
15:48:49.309 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/222/ban
15:48:49.309 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.309 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/222/ban
15:48:49.309 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:49.311 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.311 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.312 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.313 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.314 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
15:48:49.338 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/222/ban message: Некорректный запрос
15:48:49.338 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:49.338 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@73c71230]
15:48:49.338 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
15:48:49.383 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.384 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.384 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.387 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/ban
15:48:49.387 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/ban
15:48:49.387 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.387 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/ban
15:48:49.388 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:49.388 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.388 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.389 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.390 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.395 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:49.397 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:49.425 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/ban message: Запрошенный ресурс не найден
15:48:49.426 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:49.426 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@152df1e3]
15:48:49.426 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:49.467 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:49.467 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:49.467 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.467 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:49.467 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:49.468 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='25eb2639-c628-4f06-8e0c-33ac6c74eaaa@example.com', password=****}]
15:48:49.468 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:49.468 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Имя пользователя не может быть пустым]
15:48:49.468 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:49.468 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@587cc229]
15:48:49.469 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
15:48:49.511 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99999
15:48:49.511 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999
15:48:49.511 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.511 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99999
15:48:49.511 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
15:48:49.512 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.512 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.514 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:49.517 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
15:48:49.548 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999 message: Пользователь не найден
15:48:49.548 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:49.548 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@572e999a]
15:48:49.549 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
15:48:49.605 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.607 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.608 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.611 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:49.611 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:49.611 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.611 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:49.611 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:49.612 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='fa2c941d-6591-41b0-9788-844a9a805ab5@example.com', password=**** (truncated)...]
15:48:49.612 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.613 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.614 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.615 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.617 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:49.667 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.668 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:49.670 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.670 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.672 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:49.672 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@72530b58]
15:48:49.700 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:49.769 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.771 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.771 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.774 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:49.774 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:49.774 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.774 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:49.774 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:49.774 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='d9419f89-d8dd-453d-b4f0-bf673395b71c@example.com', password=**** (truncated)...]
15:48:49.774 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.775 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.776 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.777 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.778 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:49.822 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.826 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:49.826 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.826 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.830 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:49.830 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3c68bdd4]
15:48:49.854 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:49.854 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:49.854 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.854 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:49.854 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:49.854 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='d9419f89-d8dd-453d-b4f0-bf673395b71c@example.com', password=**** (truncated)...]
15:48:49.854 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.854 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.854 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.858 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.859 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:49.861 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
15:48:49.886 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/administrator message: Сущность уже есть
15:48:49.886 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:49.886 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6827b625]
15:48:49.886 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
15:48:49.934 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.935 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.936 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.939 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:49.940 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:49.942 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/229/demote
15:48:49.942 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/229/demote
15:48:49.942 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.942 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/229/demote
15:48:49.943 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:49.943 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.943 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:49.944 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:49.945 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:49.946 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:49.948 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:49.948 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7139c864]
15:48:49.999 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:49.999 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:49.999 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:49.999 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:49.999 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:50.000 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='a809156e-98b8-4851-a7dd-bfb7cf0c3ed6@example.com', password=**** (truncated)...]
15:48:50.000 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:50.000 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Пароль обязателен]
15:48:50.000 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.000 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@53fb21a1]
15:48:50.000 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
15:48:50.042 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:50.042 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:50.042 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.042 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:50.042 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:50.043 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='1e737c3c-4ee0-4527-8d9d-f681bb7e00eb@example.com', password=**** (truncated)...]
15:48:50.043 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:50.043 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Пароль обязателен]
15:48:50.043 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.043 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1490d61b]
15:48:50.044 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
15:48:50.085 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/-1
15:48:50.085 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/-1
15:48:50.085 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.085 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/-1
15:48:50.086 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
15:48:50.086 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.086 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.090 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
15:48:50.112 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/-1 message: должно быть больше 0
15:48:50.112 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.112 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4f4a7f14]
15:48:50.112 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
15:48:50.156 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.157 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.158 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.160 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/promote
15:48:50.160 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/promote
15:48:50.160 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.160 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/promote
15:48:50.160 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.161 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.161 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.162 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.163 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.164 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.165 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:50.188 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/promote message: Запрошенный ресурс не найден
15:48:50.188 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.188 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@13305d8]
15:48:50.188 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:50.229 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
15:48:50.230 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
15:48:50.230 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.230 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
15:48:50.230 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:50.230 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='c6b92936-ae10-44c7-aff1-1ed3b10c6530@example.com', password=****}]
15:48:50.230 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:50.231 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Имя пользователя не может быть пустым]
15:48:50.231 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.231 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@32a806ef]
15:48:50.231 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
15:48:50.275 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.276 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.277 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.279 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/demote
15:48:50.279 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/demote
15:48:50.279 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.279 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/demote
15:48:50.279 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.280 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.280 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.281 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.281 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.282 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.284 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:50.314 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/demote message: Запрошенный ресурс не найден
15:48:50.314 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.314 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@cae3624]
15:48:50.314 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:50.354 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.355 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.356 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.358 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.359 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.362 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/233/delete
15:48:50.362 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/233/delete
15:48:50.362 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.362 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/233/delete
15:48:50.362 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.362 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.363 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.363 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.364 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.365 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.366 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:50.372 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:50.375 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.375 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@69552ebe]
15:48:50.400 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:50.419 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.420 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.422 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.423 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/234/delete
15:48:50.423 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/234/delete
15:48:50.424 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.424 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/234/delete
15:48:50.424 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.424 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.424 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.425 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.426 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.427 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
15:48:50.450 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/234/delete message: Некорректный запрос
15:48:50.450 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.450 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2a6a71f2]
15:48:50.450 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
15:48:50.489 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.490 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.491 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.493 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
15:48:50.493 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
15:48:50.493 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.493 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
15:48:50.493 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
15:48:50.494 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='607ab682-107a-4bff-b187-8079d82aae97@example.com', password=**** (truncated)...]
15:48:50.494 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.494 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.495 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.496 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.497 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:50.542 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.545 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:50.547 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.547 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.549 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.549 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@233e8d21]
15:48:50.573 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:50.592 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.593 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.593 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.595 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.596 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.597 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.599 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/238/promote
15:48:50.599 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/238/promote
15:48:50.599 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.599 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/238/promote
15:48:50.599 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.599 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.599 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.600 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.601 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.601 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.603 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.603 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7a2922c7]
15:48:50.644 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.645 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.647 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users
15:48:50.647 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users
15:48:50.647 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.647 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users
15:48:50.647 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getAllUsers(Pageable, HttpServletRequest)
15:48:50.649 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.649 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.652 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
15:48:50.654 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.657 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.657 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@54ae014f]
15:48:50.659 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

15:48:50.707 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.708 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.709 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.711 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/unban
15:48:50.711 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/unban
15:48:50.711 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.711 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/unban
15:48:50.711 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.711 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.711 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.712 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.714 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.715 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.716 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:50.740 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/unban message: Запрошенный ресурс не найден
15:48:50.740 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.740 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5c848303]
15:48:50.740 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:50.787 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.788 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.789 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.791 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.792 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.794 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/242/demote
15:48:50.794 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/242/demote
15:48:50.794 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.794 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/242/demote
15:48:50.794 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.795 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.795 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.795 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.796 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.797 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.799 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.799 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7303e439]
15:48:50.848 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.849 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.850 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.852 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.853 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.855 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/244/ban
15:48:50.855 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/244/ban
15:48:50.855 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.855 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/244/ban
15:48:50.855 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.855 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.855 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.856 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.857 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.858 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.859 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:50.861 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:50.863 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.863 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1b3b8bc]
15:48:50.885 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:50.889 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.908 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.910 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.912 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/245
15:48:50.912 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/245
15:48:50.912 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.912 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/245
15:48:50.912 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
15:48:50.912 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.912 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.912 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.914 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:50.914 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6b1865f3]
15:48:50.959 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:50.960 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.961 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:50.963 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/99999/delete
15:48:50.963 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/delete
15:48:50.963 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:50.963 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/99999/delete
15:48:50.963 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:50.963 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.963 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:50.964 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:50.965 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:50.965 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:50.967 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:50.989 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/delete message: Запрошенный ресурс не найден
15:48:50.990 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:50.990 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@62a76e3b]
15:48:50.990 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:51.029 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.030 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.032 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.033 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.034 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.036 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.038 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:51.040 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/248/unban
15:48:51.040 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/248/unban
15:48:51.040 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.040 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/248/unban
15:48:51.040 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:51.040 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:51.040 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:51.041 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:51.041 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.042 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.043 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.045 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:51.047 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.047 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1ba82]
15:48:51.070 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:51.072 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.090 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.091 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.092 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.094 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.094 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.097 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/250/promote
15:48:51.097 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/250/promote
15:48:51.097 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.097 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/250/promote
15:48:51.097 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:51.097 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:51.097 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
15:48:51.098 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:51.099 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.100 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.100 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.104 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.106 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.106 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1ad9dd33]
15:48:51.137 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs
15:48:51.137 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs
15:48:51.137 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.137 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs
15:48:51.137 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getAllLogs(Pageable, HttpServletRequest)
15:48:51.137 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
15:48:51.137 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
15:48:51.225 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.229 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@751d806e]
15:48:51.260 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs/user/admin@example.com
15:48:51.260 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs/user/admin@example.com
15:48:51.260 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.260 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs/user/admin@example.com
15:48:51.260 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getByUser(String, Pageable, HttpServletRequest)
15:48:51.262 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
15:48:51.262 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
15:48:51.284 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.284 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@66046422]
15:48:51.322 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:51.326 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
15:48:51.330 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
15:48:51.331 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.332 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.334 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.334 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.335 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.336 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.338 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.339 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.341 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.342 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.343 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.347 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
15:48:51.347 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
15:48:51.347 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.347 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
15:48:51.347 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
15:48:51.347 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.347 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.348 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
15:48:51.350 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.351 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.352 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.352 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6e47812b]
15:48:51.379 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:51.380 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
15:48:51.382 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
15:48:51.383 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.384 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.385 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.385 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.386 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.387 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.389 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.389 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.391 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.392 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.394 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.397 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/253
15:48:51.397 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/253
15:48:51.397 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.397 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/253
15:48:51.397 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
15:48:51.397 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.397 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.399 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
15:48:51.400 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.401 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.402 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.402 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@556f737a]
15:48:51.427 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:51.428 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
15:48:51.430 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
15:48:51.431 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.432 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.433 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.433 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.434 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.434 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.436 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.438 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.440 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.440 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.442 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.550 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.553 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
15:48:51.553 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
15:48:51.553 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.553 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
15:48:51.553 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
15:48:51.553 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.554 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.554 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
15:48:51.555 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.556 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.557 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.557 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2d8526d6]
15:48:51.583 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:51.584 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
15:48:51.585 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
15:48:51.588 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
15:48:51.588 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.589 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.590 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.591 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
15:48:51.592 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.592 [main] DEBUG org.hibernate.SQL - delete from users where id=?
15:48:51.594 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.595 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.597 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.597 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.599 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.703 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:51.706 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/257
15:48:51.706 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/257
15:48:51.706 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.706 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/257
15:48:51.706 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
15:48:51.707 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.707 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
15:48:51.708 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
15:48:51.709 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.709 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.710 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.710 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@cf1eac5]
15:48:51.740 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
15:48:51.740 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
15:48:51.740 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.740 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:51.740 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
15:48:51.740 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
15:48:51.741 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='4e4b82b5-f90a-40f4-8d57-eb3c4c442cda', email='test-4a23b402-fb1c-4e8f-8628-b474db5 (truncated)...]
15:48:51.741 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-4a23b402-fb1c-4e8f-8628-b474db5db345@example.com
15:48:51.741 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:51.788 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:51.789 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:51.791 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-4a23b402-fb1c-4e8f-8628-b474db5db345@example.com
15:48:51.794 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:51.794 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@238e156]
15:48:51.833 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:51.834 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.835 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:51.836 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:51.838 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-4a23b402-fb1c-4e8f-8628-b474db5db345@example.com
15:48:51.882 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
15:48:51.882 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
15:48:51.882 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.882 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:51.882 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
15:48:51.882 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
15:48:51.886 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTRhMjNiNDAyLWZiMWMtNGU4Zi04NjI4LWI (truncated)...]
15:48:51.886 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
15:48:51.886 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
15:48:51.904 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:51.909 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:51.910 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-4a23b402-fb1c-4e8f-8628-b474db5db345@example.com заблокирован
15:48:51.910 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
15:48:51.933 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Отказано в доступе
15:48:51.933 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:51.933 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@761d5582]
15:48:51.934 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Ваш аккаунт заблокирован]
15:48:51.959 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
15:48:51.959 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
15:48:51.959 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:51.959 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:51.959 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
15:48:51.959 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
15:48:51.960 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='6493a311-49f2-4293-80e9-b3d94ea57123', email='test-3db0087d-6bbb-45cf-bdc4-45ff094 (truncated)...]
15:48:51.960 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-3db0087d-6bbb-45cf-bdc4-45ff094cec9b@example.com
15:48:51.961 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:52.005 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.008 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.010 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-3db0087d-6bbb-45cf-bdc4-45ff094cec9b@example.com
15:48:52.010 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.010 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@2da2aaf4]
15:48:52.034 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
15:48:52.034 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
15:48:52.035 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.035 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.035 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
15:48:52.035 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
15:48:52.037 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-3db0087d-6bbb-45cf-bdc4-45ff094cec9b@example.com, password=invalidPassword]]
15:48:52.038 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-3db0087d-6bbb-45cf-bdc4-45ff094cec9b@example.com
15:48:52.038 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.039 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.086 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: не верный пароль для почты test-3db0087d-6bbb-45cf-bdc4-45ff094cec9b@example.com
15:48:52.086 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
15:48:52.117 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
15:48:52.118 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.118 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5b571238]
15:48:52.118 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный пароль]
15:48:52.146 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
15:48:52.146 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
15:48:52.146 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.146 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.146 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
15:48:52.146 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
15:48:52.147 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-d2f1fe6b-bbad-4234-8acc-f9efe679ed78@example.com, password=123]]
15:48:52.147 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-d2f1fe6b-bbad-4234-8acc-f9efe679ed78@example.com
15:48:52.148 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.149 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: почта test-d2f1fe6b-bbad-4234-8acc-f9efe679ed78@example.com не найдена
15:48:52.150 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
15:48:52.170 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
15:48:52.170 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.170 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1a49ad63]
15:48:52.170 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверная почта]
15:48:52.201 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-604938b6-7d75-4e22-866b-5864d3d4a38e@example.com
15:48:52.202 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
15:48:52.202 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
15:48:52.202 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.202 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.202 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
15:48:52.202 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
15:48:52.203 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTYwNDkzOGI2LTdkNzUtNGUyMi04NjZiLTU (truncated)...]
15:48:52.203 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
15:48:52.203 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
15:48:52.204 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.205 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-604938b6-7d75-4e22-866b-5864d3d4a38e@example.com не найден
15:48:52.206 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUsernameNotFound(UsernameNotFoundException, HttpServletRequest)
15:48:52.229 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Пользователь не найден
15:48:52.230 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.230 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3958ea4d]
15:48:52.230 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.core.userdetails.UsernameNotFoundException: Пользователь не найден]
15:48:52.257 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
15:48:52.257 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
15:48:52.257 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.257 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.257 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
15:48:52.257 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
15:48:52.257 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com', password=*** (truncated)...]
15:48:52.258 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.258 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:52.304 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.304 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.309 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.309 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.309 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@63449240]
15:48:52.332 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
15:48:52.332 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
15:48:52.332 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.332 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.332 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
15:48:52.332 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
15:48:52.333 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com, password=123]]
15:48:52.333 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.333 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.334 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.379 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная авторизация: test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.379 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.379 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.379 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.379 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTM0MjVmMThkLTYyMjgtNGZjMi05NWMyLWYxZ (truncated)...]
15:48:52.417 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
15:48:52.417 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
15:48:52.417 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.417 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.417 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
15:48:52.417 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
15:48:52.417 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTM0MjVmMThkLTYyMjgtNGZjMi05NWMyLWY (truncated)...]
15:48:52.417 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
15:48:52.417 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
15:48:52.417 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.419 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.420 [main] INFO  c.e.e.service.AuthServiceImpl - Успешное обновление токена, пользователя test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.420 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.420 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-3425f18d-6228-4fc2-95c2-f1ebcea11c89@example.com
15:48:52.421 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.421 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTM0MjVmMThkLTYyMjgtNGZjMi05NWMyLWYxZ (truncated)...]
15:48:52.448 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
15:48:52.448 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
15:48:52.448 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.448 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.448 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
15:48:52.448 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
15:48:52.448 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=invalidToken]]
15:48:52.449 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
15:48:52.449 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
15:48:52.449 [main] ERROR c.e.e.service.AuthServiceImpl - Ошибка обновление токена, пользователя Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.expensetracker.security.JwtUtil.parse(JwtUtil.java:63)
	at com.example.expensetracker.service.AuthServiceImpl.refresh(AuthServiceImpl.java:81)
	at com.example.expensetracker.controller.AuthController.refresh(AuthController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.example.expensetracker.logging.applog.AppLogFilter.doFilterInternal(AppLogFilter.java:30)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.expensetracker.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at test.controller.AuthControllerIT.refresh_shouldReturnUnauthorized_whenTokenInvalid(AuthControllerIT.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
15:48:52.451 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
15:48:52.481 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Неверные учётные данные
15:48:52.481 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.481 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@49b52c79]
15:48:52.482 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Невалидный токен]
15:48:52.516 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
15:48:52.516 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
15:48:52.516 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.516 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.516 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
15:48:52.516 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
15:48:52.517 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-3f28498a-1a06-4399-bde1-67a7e46ce4d5@example.com', password=*** (truncated)...]
15:48:52.517 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-3f28498a-1a06-4399-bde1-67a7e46ce4d5@example.com
15:48:52.517 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:52.565 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.566 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.568 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-3f28498a-1a06-4399-bde1-67a7e46ce4d5@example.com
15:48:52.568 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.568 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@78a331b2]
15:48:52.593 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
15:48:52.593 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
15:48:52.593 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.593 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.593 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
15:48:52.593 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
15:48:52.593 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-3f28498a-1a06-4399-bde1-67a7e46ce4d5@example.com', password=*** (truncated)...]
15:48:52.593 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-3f28498a-1a06-4399-bde1-67a7e46ce4d5@example.com
15:48:52.594 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
15:48:52.595 [main] WARN  c.e.e.service.AuthServiceImpl - Регистрации провалилась: почта test-3f28498a-1a06-4399-bde1-67a7e46ce4d5@example.com уже используется
15:48:52.595 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleDataIntegrityViolation(DataIntegrityViolationException, HttpServletRequest)
15:48:52.618 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/register message: Нарушение ограничений базы данных
15:48:52.618 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.618 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2e86dd15]
15:48:52.618 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: Эта почта уже используется]
15:48:52.645 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
15:48:52.645 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
15:48:52.645 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.645 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
15:48:52.645 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
15:48:52.645 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
15:48:52.645 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='', password=****}]
15:48:52.646 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:52.646 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=anonymous path=/api/auth/register errors=[Почта обязательна]
15:48:52.646 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.646 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6f37d43f]
15:48:52.646 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.model.User> com.example.expensetracker.controller.AuthController.register(com.example.expensetracker.dto.RegisterDto): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
15:48:52.693 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.694 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.697 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.698 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.700 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/report
15:48:52.700 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/report
15:48:52.700 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.700 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/report
15:48:52.700 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#report(DateRangeDto, UserDetailsImpl, HttpServletRequest)
15:48:52.714 [main] DEBUG org.hibernate.SQL - select coalesce(c1_0.name,'UNCATEGORIZED'),sum(e1_0.amount) from expenses e1_0 left join categories c1_0 on c1_0.id=e1_0.category_id where e1_0.user_id=? and e1_0.occurred_at between ? and ? group by c1_0.name
15:48:52.723 [main] DEBUG org.hibernate.SQL - select coalesce(sum(e1_0.amount),0) from expenses e1_0 where e1_0.user_id=? and e1_0.occurred_at between ? and ?
15:48:52.724 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.724 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@11ab0dc3]
15:48:52.771 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.772 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.775 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.777 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.778 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/total
15:48:52.778 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/total
15:48:52.778 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.778 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/total
15:48:52.778 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#getTotal(UserDetailsImpl, HttpServletRequest)
15:48:52.782 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:52.784 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:52.784 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2045e367]
15:48:52.825 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.827 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.829 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.830 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.831 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/report
15:48:52.831 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/report
15:48:52.831 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.831 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/report
15:48:52.831 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#report(DateRangeDto, UserDetailsImpl, HttpServletRequest)
15:48:52.832 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:52.832 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/expenses/report errors=[from должен быть раньше to]
15:48:52.832 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.832 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@47d499d4]
15:48:52.833 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.ExpensesReportDto>> com.example.expensetracker.controller.ExpenseController.report(com.example.expensetracker.dto.DateRangeDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'dateRangeDto' on field 'validRange': rejected value [false]; codes [AssertTrue.dateRangeDto.validRange,AssertTrue.validRange,AssertTrue.boolean,AssertTrue]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [dateRangeDto.validRange,validRange]; arguments []; default message [validRange]]; default message [from должен быть раньше to]] ]
15:48:52.877 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.878 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.879 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.881 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.882 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.884 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.884 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.885 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.887 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/267/ban
15:48:52.887 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/267/ban
15:48:52.887 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.887 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/267/ban
15:48:52.887 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:52.888 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:52.888 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:52.890 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.891 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.892 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:52.893 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
15:48:52.921 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/267/ban message: Отказано в доступе
15:48:52.921 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.921 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@18ded89a]
15:48:52.922 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
15:48:52.960 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.960 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.961 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.963 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.964 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.965 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:52.965 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.966 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:52.968 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/269/ban
15:48:52.968 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/269/ban
15:48:52.968 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:52.968 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/269/ban
15:48:52.968 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:52.969 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:52.969 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:52.969 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:52.970 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:52.971 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:52.972 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
15:48:52.994 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/269/ban message: Отказано в доступе
15:48:52.994 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:52.994 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6b686a6d]
15:48:52.994 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
15:48:53.041 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.042 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.043 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.045 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.046 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.047 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/270/ban
15:48:53.047 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/270/ban
15:48:53.047 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.047 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/270/ban
15:48:53.047 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:53.047 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.047 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.048 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.048 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.050 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
15:48:53.072 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/270/ban message: Некорректный запрос
15:48:53.072 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.072 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@210e44e]
15:48:53.073 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
15:48:53.116 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.117 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.118 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.120 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.121 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.135 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.140 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.141 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.144 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
15:48:53.144 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
15:48:53.144 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.144 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
15:48:53.144 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:53.144 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.144 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.145 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.146 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.147 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.148 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:53.175 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
15:48:53.176 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.176 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@a856781]
15:48:53.176 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:53.243 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.265 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.278 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.282 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.283 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.285 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
15:48:53.285 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
15:48:53.285 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.285 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
15:48:53.285 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
15:48:53.285 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.285 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.285 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.303 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
15:48:53.332 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
15:48:53.332 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.332 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2eb0590b]
15:48:53.332 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
15:48:53.382 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.383 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.384 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.387 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.388 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.390 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
15:48:53.390 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
15:48:53.390 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.390 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
15:48:53.390 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
15:48:53.390 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.390 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.391 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
15:48:53.423 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
15:48:53.423 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.423 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4fa9ff66]
15:48:53.424 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
15:48:53.469 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.471 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.472 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.476 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.477 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.478 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.479 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.481 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
15:48:53.481 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
15:48:53.481 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.481 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
15:48:53.482 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
15:48:53.482 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.482 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.483 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
15:48:53.484 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.485 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.487 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:53.487 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3d140111]
15:48:53.535 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.537 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.538 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.541 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.541 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.559 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.560 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.561 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.563 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
15:48:53.563 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
15:48:53.563 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.563 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
15:48:53.563 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:53.564 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.564 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.565 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.566 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.567 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.569 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
15:48:53.591 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
15:48:53.591 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.591 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@101ae6e0]
15:48:53.591 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
15:48:53.633 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.634 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.635 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.637 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.638 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.639 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.640 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.642 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/280/ban
15:48:53.642 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/280/ban
15:48:53.642 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.642 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/280/ban
15:48:53.643 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:53.643 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.643 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.643 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.644 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.645 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.646 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:53.647 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:53.649 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:53.649 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2e0e9459]
15:48:53.672 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:53.673 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.692 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.693 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.693 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.696 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.696 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.697 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.698 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.700 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/282
15:48:53.700 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/282
15:48:53.700 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.700 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/282
15:48:53.701 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
15:48:53.701 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.701 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.701 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.703 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:53.703 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1f2c2f0f]
15:48:53.742 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.743 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.744 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.746 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.747 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.762 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.763 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.765 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.766 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:53.768 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.768 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.769 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.771 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/284/unban
15:48:53.771 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/284/unban
15:48:53.771 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.771 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/284/unban
15:48:53.771 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
15:48:53.771 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.771 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
15:48:53.772 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.772 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.773 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.774 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:53.776 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:53.778 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:53.778 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@afefbe3]
15:48:53.802 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
15:48:53.804 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.825 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.826 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.875 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:53.876 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:53.879 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
15:48:53.879 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
15:48:53.879 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.879 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
15:48:53.879 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
15:48:53.880 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=]]
15:48:53.882 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:53.882 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите новый пароль]
15:48:53.882 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.882 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@78df87c8]
15:48:53.883 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'newPassword': rejected value []; codes [NotBlank.changePasswordRequest.newPassword,NotBlank.newPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.newPassword,newPassword]; arguments []; default message [newPassword]]; default message [Введите новый пароль]] ]
15:48:53.928 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.929 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.931 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
15:48:53.931 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
15:48:53.931 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.931 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
15:48:53.931 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
15:48:53.931 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=, newPassword=newPass]]
15:48:53.931 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
15:48:53.932 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите старый пароль]
15:48:53.932 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:53.932 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@8f27749]
15:48:53.932 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'oldPassword': rejected value []; codes [NotBlank.changePasswordRequest.oldPassword,NotBlank.oldPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.oldPassword,oldPassword]; arguments []; default message [oldPassword]]; default message [Введите старый пароль]] ]
15:48:53.970 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:53.971 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.972 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:53.974 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
15:48:53.974 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
15:48:53.974 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:53.974 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
15:48:53.974 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
15:48:53.975 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:53.976 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:53.977 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:53.977 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5896d274]
15:48:54.017 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:54.018 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:54.020 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
15:48:54.020 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
15:48:54.020 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:54.020 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
15:48:54.020 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
15:48:54.021 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:54.021 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:54.022 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:54.022 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@792dd6f4]
15:48:54.068 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
15:48:54.068 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
15:48:54.068 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:54.068 [main] WARN  c.e.e.security.JwtAuthFilter - Отсутствует токен - пользователь не аутентифицирован
15:48:54.086 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:54.088 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:54.137 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:54.139 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:54.141 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
15:48:54.141 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
15:48:54.141 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:54.141 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
15:48:54.141 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
15:48:54.141 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=invalidPassword, newPassword=newPass]]
15:48:54.142 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:54.143 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:54.189 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
15:48:54.213 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: user@example.com path: /api/users/change-password message: Неверные учётные данные
15:48:54.213 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
15:48:54.213 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@348ebf14]
15:48:54.213 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный старый пароль]
15:48:54.255 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:54.256 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:54.303 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
15:48:54.307 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:54.309 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
15:48:54.309 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
15:48:54.309 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:54.309 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
15:48:54.310 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
15:48:54.310 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=newPass]]
15:48:54.311 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:54.312 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:54.402 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
15:48:54.407 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
15:48:54.408 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:54.408 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@59d3243c]
15:48:54.448 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
15:48:54.449 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:54.450 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
15:48:54.452 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
15:48:54.452 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
15:48:54.452 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
15:48:54.452 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
15:48:54.452 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
15:48:54.453 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
15:48:54.454 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
15:48:54.454 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
15:48:54.455 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@37973f47]
15:48:54.483 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
15:48:54.608 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
15:48:54.617 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
15:48:54.618 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
15:48:54.619 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
