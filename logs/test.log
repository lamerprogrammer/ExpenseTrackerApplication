11:43:39.483 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
11:43:39.568 [main] INFO  test.controller.AdminControllerIT - Starting AdminControllerIT using Java 17.0.16 with PID 11344 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
11:43:39.569 [main] INFO  test.controller.AdminControllerIT - The following 1 profile is active: "test"
11:43:40.412 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
11:43:40.412 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
11:43:40.443 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
11:43:40.443 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
11:43:40.457 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 1 Elasticsearch repository interface.
11:43:40.465 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
11:43:40.466 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
11:43:40.474 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
11:43:40.478 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 2 JPA repository interfaces.
11:43:41.082 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
11:43:41.094 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
11:43:41.097 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
11:43:41.097 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
11:43:41.136 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
11:43:41.136 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1551 ms
11:43:41.603 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
11:43:41.644 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
11:43:41.665 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
11:43:41.887 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
11:43:41.914 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
11:43:42.051 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6e0bfba8
11:43:42.053 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
11:43:42.082 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
11:43:42.101 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
11:43:42.885 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
11:43:42.887 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
11:43:43.059 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
11:43:43.059 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
11:43:43.279 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
11:43:43.339 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
11:43:43.515 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
11:43:43.600 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
11:43:43.654 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
11:43:43.702 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
11:43:43.745 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
11:43:43.759 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
11:43:43.913 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
11:43:43.913 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
11:43:43.914 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
11:43:43.914 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
11:43:43.915 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
11:43:43.963 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
11:43:43.971 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 52303 (http) with context path '/'
11:43:43.975 [main] INFO  test.controller.AdminControllerIT - Started AdminControllerIT in 4.737 seconds (process running for 6.222)
11:43:44.234 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:44.238 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:44.238 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.241 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:44.243 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.277 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
11:43:44.307 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:44.307 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Некорректная почта]
11:43:44.316 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.316 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@378281b5]
11:43:44.322 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@131aefff,.*]; default message [Некорректная почта]] ]
11:43:44.442 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:44.442 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:44.443 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.443 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:44.443 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.444 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
11:43:44.445 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:44.445 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Почта обязательна]
11:43:44.445 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.445 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7a66f673]
11:43:44.446 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
11:43:44.478 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:44.478 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:44.478 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.479 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:44.479 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.479 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
11:43:44.480 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:44.480 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Некорректная почта]
11:43:44.480 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.480 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@44858e4]
11:43:44.480 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@131aefff,.*]; default message [Некорректная почта]] ]
11:43:44.511 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:44.511 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:44.511 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.511 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:44.511 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.512 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
11:43:44.512 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:44.512 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Почта обязательна]
11:43:44.513 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.513 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4100c25e]
11:43:44.513 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
11:43:44.577 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:44.613 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:44.619 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:44.619 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:44.619 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.619 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:44.619 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.620 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='dfca6723-84e1-473c-910a-c294b8bbb0ae@example.com', password=**** (truncated)...]
11:43:44.621 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.628 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.710 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:44.722 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:44.727 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:44.780 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:44.782 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:44.784 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:44.784 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:44.791 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:44.791 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@620574ab]
11:43:44.808 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:44.808 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:44.808 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.808 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:44.808 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.808 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='dfca6723-84e1-473c-910a-c294b8bbb0ae@example.com', password=**** (truncated)...]
11:43:44.809 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.809 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.810 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:44.811 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:44.812 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:44.815 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
11:43:44.827 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/moderator message: Сущность уже есть
11:43:44.828 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.828 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5334a066]
11:43:44.828 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
11:43:44.857 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:44.858 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:44.860 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/357/ban
11:43:44.860 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/357/ban
11:43:44.860 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.861 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/357/ban
11:43:44.861 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:44.861 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.862 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.862 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:44.863 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:44.865 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
11:43:44.879 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/357/ban message: Некорректный запрос
11:43:44.879 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.879 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@32f87f7]
11:43:44.879 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
11:43:44.910 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:44.912 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:44.914 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/ban
11:43:44.914 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/ban
11:43:44.914 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.915 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/ban
11:43:44.915 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:44.915 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.915 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.916 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:44.917 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:44.923 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:44.925 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:44.938 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/ban message: Запрошенный ресурс не найден
11:43:44.938 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.938 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1de9051d]
11:43:44.938 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:44.965 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:44.965 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:44.965 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.965 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:44.965 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:44.966 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='7352ade9-5ae4-45e8-87eb-51f6c87c5fae@example.com', password=****}]
11:43:44.966 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:44.966 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Имя пользователя не может быть пустым]
11:43:44.966 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:44.966 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@60dd6261]
11:43:44.967 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
11:43:44.994 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99999
11:43:44.994 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999
11:43:44.994 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:44.994 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99999
11:43:44.994 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
11:43:44.994 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.995 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:44.996 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:44.997 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
11:43:45.010 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999 message: Пользователь не найден
11:43:45.010 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.010 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@28f16a79]
11:43:45.010 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
11:43:45.040 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.041 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.043 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:45.043 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:45.043 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.043 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:45.043 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.043 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='886b4a7d-9f6c-4196-bb2e-7baa76354ab9@example.com', password=**** (truncated)...]
11:43:45.044 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.044 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.045 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.046 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.047 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:45.094 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.096 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:45.097 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.098 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.100 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.100 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7337b383]
11:43:45.113 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:45.177 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.179 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.181 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:45.181 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:45.181 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.181 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:45.181 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.182 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='d6495831-3106-4598-b815-0b476afa4e8c@example.com', password=**** (truncated)...]
11:43:45.182 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.182 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.183 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.184 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.185 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:45.232 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.234 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:45.235 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.236 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.238 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.238 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@18408bc2]
11:43:45.252 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:45.252 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:45.252 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.252 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:45.252 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.253 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='d6495831-3106-4598-b815-0b476afa4e8c@example.com', password=**** (truncated)...]
11:43:45.253 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.253 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.254 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.255 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.256 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:45.257 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
11:43:45.270 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/administrator message: Сущность уже есть
11:43:45.270 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.270 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@52376d69]
11:43:45.270 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
11:43:45.302 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.303 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.306 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.306 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.308 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/364/demote
11:43:45.308 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/364/demote
11:43:45.308 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.308 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/364/demote
11:43:45.309 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.309 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.309 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.310 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.311 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.312 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.314 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.314 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@78366e28]
11:43:45.341 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:45.341 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:45.341 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.342 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:45.342 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.342 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='982b977e-a3b2-4578-924a-98616d244e43@example.com', password=**** (truncated)...]
11:43:45.342 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:45.342 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Пароль обязателен]
11:43:45.342 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.342 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7c7a5fc4]
11:43:45.343 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
11:43:45.370 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:45.370 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:45.371 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.371 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:45.371 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.371 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='9acb5ec0-6a17-4896-8df2-2102ae8dcb45@example.com', password=**** (truncated)...]
11:43:45.371 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:45.371 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Пароль обязателен]
11:43:45.372 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.372 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4b367665]
11:43:45.373 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
11:43:45.400 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/-1
11:43:45.400 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/-1
11:43:45.400 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.400 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/-1
11:43:45.401 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
11:43:45.401 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.401 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.406 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(ConstraintViolationException, HttpServletRequest)
11:43:45.420 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/-1 message: должно быть больше 0
11:43:45.420 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.420 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7ad1acec]
11:43:45.420 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
11:43:45.448 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.449 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.452 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/promote
11:43:45.452 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/promote
11:43:45.452 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.452 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/promote
11:43:45.452 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.452 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.452 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.453 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.454 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.455 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.457 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:45.469 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/promote message: Запрошенный ресурс не найден
11:43:45.469 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.469 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@53569cfd]
11:43:45.469 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:45.493 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
11:43:45.493 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
11:43:45.493 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.496 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
11:43:45.496 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.496 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='4e42de0a-99b1-4c70-9be2-5ddcf7a2f876@example.com', password=****}]
11:43:45.497 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:45.497 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Имя пользователя не может быть пустым]
11:43:45.497 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.497 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@522e577c]
11:43:45.497 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
11:43:45.526 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.527 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.529 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/demote
11:43:45.529 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/demote
11:43:45.529 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.529 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/demote
11:43:45.529 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.529 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.529 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.530 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.531 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.532 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.534 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:45.549 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/demote message: Запрошенный ресурс не найден
11:43:45.550 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.550 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1c5bcfd6]
11:43:45.550 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:45.576 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.577 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.579 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.580 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.582 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/368/delete
11:43:45.582 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/368/delete
11:43:45.582 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.582 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/368/delete
11:43:45.583 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.583 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.583 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.584 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.585 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.585 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.587 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:45.592 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
11:43:45.595 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.595 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1cbb1537]
11:43:45.608 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:45.623 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.624 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.626 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/369/delete
11:43:45.626 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/369/delete
11:43:45.626 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.626 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/369/delete
11:43:45.626 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.626 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.626 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.627 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.628 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.630 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
11:43:45.640 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/369/delete message: Некорректный запрос
11:43:45.640 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.640 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1b0d328b]
11:43:45.640 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
11:43:45.669 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.670 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.672 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
11:43:45.672 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
11:43:45.672 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.672 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
11:43:45.672 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
11:43:45.672 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='873df9a4-3c01-41e5-a563-58a47af55c3f@example.com', password=**** (truncated)...]
11:43:45.672 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.672 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.673 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.674 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.676 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:45.723 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.725 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:45.727 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.727 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.729 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.729 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4e54e43c]
11:43:45.744 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:45.759 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.760 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.762 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.763 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.765 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/373/promote
11:43:45.765 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/373/promote
11:43:45.765 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.765 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/373/promote
11:43:45.766 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.766 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.766 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.767 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.768 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.769 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.770 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.770 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@116d043d]
11:43:45.798 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.799 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.801 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users
11:43:45.801 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users
11:43:45.801 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.801 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users
11:43:45.802 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getAllUsers(Pageable, HttpServletRequest)
11:43:45.802 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.802 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.806 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
11:43:45.808 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.812 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.812 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4858d85f]
11:43:45.814 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

11:43:45.853 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.854 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.856 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/unban
11:43:45.856 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/unban
11:43:45.856 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.857 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/unban
11:43:45.857 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.857 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.857 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.858 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.859 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.860 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.862 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:45.874 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/unban message: Запрошенный ресурс не найден
11:43:45.874 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:45.874 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@51802e74]
11:43:45.874 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:45.905 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.906 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.908 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.908 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.910 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/377/demote
11:43:45.911 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/377/demote
11:43:45.911 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.911 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/377/demote
11:43:45.911 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.911 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.911 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.912 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.914 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.915 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.916 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.916 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@698b0aa4]
11:43:45.946 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.948 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.950 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:45.951 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:45.954 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/379/ban
11:43:45.954 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/379/ban
11:43:45.954 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:45.954 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/379/ban
11:43:45.954 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:45.955 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.955 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:45.956 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:45.957 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:45.958 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:45.959 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:45.961 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
11:43:45.963 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:45.963 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@59d3495a]
11:43:45.979 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:45.981 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.000 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.001 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.003 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/380
11:43:46.003 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/380
11:43:46.003 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.004 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/380
11:43:46.004 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
11:43:46.004 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.004 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.004 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.006 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.006 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@643f2339]
11:43:46.037 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.040 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.042 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/99999/delete
11:43:46.042 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/delete
11:43:46.042 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.042 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/99999/delete
11:43:46.042 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:46.042 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.042 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.043 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:46.044 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.045 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.046 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:46.059 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/delete message: Запрошенный ресурс не найден
11:43:46.059 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:46.059 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@167c98db]
11:43:46.059 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:46.086 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.087 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.089 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.090 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.093 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.094 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
11:43:46.096 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/383/unban
11:43:46.096 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/383/unban
11:43:46.096 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.097 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/383/unban
11:43:46.097 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:46.097 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.097 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.098 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:46.099 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.099 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.101 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.103 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
11:43:46.105 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.105 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@38d1ff78]
11:43:46.119 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:46.121 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.136 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.137 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.139 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.140 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.142 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/385/promote
11:43:46.142 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/385/promote
11:43:46.142 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.142 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/385/promote
11:43:46.142 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:46.143 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.143 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
11:43:46.143 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:46.144 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.145 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.146 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.150 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.153 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.153 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@18d0d721]
11:43:46.175 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs
11:43:46.175 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs
11:43:46.175 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.175 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs
11:43:46.176 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getAllLogs(Pageable, HttpServletRequest)
11:43:46.176 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
11:43:46.176 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
11:43:46.276 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.276 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@210b5793]
11:43:46.300 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs/user/admin@example.com
11:43:46.300 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs/user/admin@example.com
11:43:46.300 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.300 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs/user/admin@example.com
11:43:46.300 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getByUser(String, Pageable, HttpServletRequest)
11:43:46.302 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
11:43:46.302 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
11:43:46.324 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.324 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@30dffb26]
11:43:46.353 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:46.355 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
11:43:46.361 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
11:43:46.363 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.363 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.365 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.366 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.367 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.367 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.371 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.372 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.373 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.374 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.376 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.379 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
11:43:46.379 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
11:43:46.379 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.379 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
11:43:46.379 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
11:43:46.380 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.380 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.381 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
11:43:46.382 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.383 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.384 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.384 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7984ed90]
11:43:46.401 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:46.403 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
11:43:46.406 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
11:43:46.407 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.407 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.408 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.409 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.409 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.410 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.412 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.413 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.415 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.416 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.418 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.421 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/388
11:43:46.421 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/388
11:43:46.421 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.421 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/388
11:43:46.421 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
11:43:46.421 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.421 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.423 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
11:43:46.428 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.428 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.429 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.429 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5f4a93a8]
11:43:46.447 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:46.448 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
11:43:46.450 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
11:43:46.451 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.452 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.453 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.454 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.455 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.455 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.458 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.459 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.461 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.462 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.464 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.575 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.579 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
11:43:46.579 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
11:43:46.579 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.579 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
11:43:46.579 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
11:43:46.580 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.580 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.581 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
11:43:46.583 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.584 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.585 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.585 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@25b11453]
11:43:46.606 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:46.608 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
11:43:46.608 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
11:43:46.611 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
11:43:46.612 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.613 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.614 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.614 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
11:43:46.615 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.616 [main] DEBUG org.hibernate.SQL - delete from users where id=?
11:43:46.618 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.619 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.621 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.622 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.625 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.740 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:46.744 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/392
11:43:46.744 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/392
11:43:46.744 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.744 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/392
11:43:46.744 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
11:43:46.744 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.745 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
11:43:46.746 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
11:43:46.748 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.748 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.749 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.749 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@43db54e5]
11:43:46.772 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
11:43:46.772 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
11:43:46.772 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.773 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:46.773 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
11:43:46.773 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
11:43:46.774 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='412eb731-f768-434a-a404-89c8fe1b4743', email='test-8b22fae6-e111-4d69-99ee-d8b1e80 (truncated)...]
11:43:46.774 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-8b22fae6-e111-4d69-99ee-d8b1e80a3c4d@example.com
11:43:46.775 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:46.822 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:46.823 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:46.825 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-8b22fae6-e111-4d69-99ee-d8b1e80a3c4d@example.com
11:43:46.829 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:46.829 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@17722954]
11:43:46.860 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:46.862 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.864 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:46.865 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
11:43:46.867 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-8b22fae6-e111-4d69-99ee-d8b1e80a3c4d@example.com
11:43:46.912 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
11:43:46.912 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
11:43:46.912 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.912 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:46.912 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
11:43:46.916 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
11:43:46.916 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LThiMjJmYWU2LWUxMTEtNGQ2OS05OWVlLWQ (truncated)...]
11:43:46.920 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
11:43:46.920 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
11:43:46.944 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:46.945 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:46.947 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-8b22fae6-e111-4d69-99ee-d8b1e80a3c4d@example.com заблокирован
11:43:46.947 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
11:43:46.960 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Отказано в доступе
11:43:46.960 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:46.960 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@ddb1f50]
11:43:46.960 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Ваш аккаунт заблокирован]
11:43:46.977 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
11:43:46.977 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
11:43:46.977 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:46.977 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:46.977 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
11:43:46.977 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
11:43:46.978 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='edc9cc06-83df-4d3a-80b8-d4b44a504288', email='test-a65c26df-3075-474e-9ba4-a89423e (truncated)...]
11:43:46.978 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-a65c26df-3075-474e-9ba4-a89423e95883@example.com
11:43:46.979 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:47.026 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.027 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.029 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-a65c26df-3075-474e-9ba4-a89423e95883@example.com
11:43:47.029 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:47.029 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@41108434]
11:43:47.043 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
11:43:47.043 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
11:43:47.043 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.043 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.043 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
11:43:47.043 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
11:43:47.045 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-a65c26df-3075-474e-9ba4-a89423e95883@example.com, password=invalidPassword]]
11:43:47.045 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-a65c26df-3075-474e-9ba4-a89423e95883@example.com
11:43:47.045 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.047 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.094 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: не верный пароль для почты test-a65c26df-3075-474e-9ba4-a89423e95883@example.com
11:43:47.094 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
11:43:47.111 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
11:43:47.112 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.112 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@333a33eb]
11:43:47.112 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный пароль]
11:43:47.127 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
11:43:47.127 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
11:43:47.127 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.127 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.127 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
11:43:47.127 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
11:43:47.128 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-e02516f3-8b48-48c3-a9ba-8e5b2c3e7868@example.com, password=123]]
11:43:47.128 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-e02516f3-8b48-48c3-a9ba-8e5b2c3e7868@example.com
11:43:47.128 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.129 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: почта test-e02516f3-8b48-48c3-a9ba-8e5b2c3e7868@example.com не найдена
11:43:47.129 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
11:43:47.141 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
11:43:47.141 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.141 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@58b6228d]
11:43:47.142 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверная почта]
11:43:47.157 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-1249febf-2a92-4080-ae3d-42fca02c9edd@example.com
11:43:47.158 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
11:43:47.158 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
11:43:47.158 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.158 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.158 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
11:43:47.158 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
11:43:47.158 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTEyNDlmZWJmLTJhOTItNDA4MC1hZTNkLTQ (truncated)...]
11:43:47.158 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
11:43:47.158 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
11:43:47.159 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.161 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-1249febf-2a92-4080-ae3d-42fca02c9edd@example.com не найден
11:43:47.161 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUsernameNotFound(UsernameNotFoundException, HttpServletRequest)
11:43:47.173 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Пользователь не найден
11:43:47.173 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.173 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1964cea2]
11:43:47.174 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.core.userdetails.UsernameNotFoundException: Пользователь не найден]
11:43:47.189 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
11:43:47.189 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
11:43:47.189 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.189 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.189 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
11:43:47.189 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
11:43:47.189 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-d986d7c5-c978-4c12-8692-f138ac372777@example.com', passwor (truncated)...]
11:43:47.189 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.189 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:47.238 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.239 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.241 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.241 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:47.241 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@1c145f45]
11:43:47.255 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
11:43:47.255 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
11:43:47.255 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.255 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.255 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
11:43:47.255 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
11:43:47.255 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-d986d7c5-c978-4c12-8692-f138ac372777@example.com, password=123]]
11:43:47.255 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.256 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.257 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.303 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная авторизация: test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.303 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.303 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.303 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:47.307 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWQ5ODZkN2M1LWM5NzgtNGMxMi04NjkyLWYxM (truncated)...]
11:43:47.331 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
11:43:47.331 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
11:43:47.331 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.331 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.331 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
11:43:47.331 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
11:43:47.331 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWQ5ODZkN2M1LWM5NzgtNGMxMi04NjkyLWY (truncated)...]
11:43:47.331 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
11:43:47.331 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
11:43:47.331 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.336 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.337 [main] INFO  c.e.e.service.AuthServiceImpl - Успешное обновление токена, пользователя test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.337 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.337 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-d986d7c5-c978-4c12-8692-f138ac372777@example.com
11:43:47.337 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:47.337 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWQ5ODZkN2M1LWM5NzgtNGMxMi04NjkyLWYxM (truncated)...]
11:43:47.357 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
11:43:47.357 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
11:43:47.357 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.357 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.357 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
11:43:47.357 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
11:43:47.357 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=invalidToken]]
11:43:47.358 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
11:43:47.358 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
11:43:47.358 [main] ERROR c.e.e.service.AuthServiceImpl - Ошибка обновление токена, пользователя Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.expensetracker.security.JwtUtil.parse(JwtUtil.java:63)
	at com.example.expensetracker.service.AuthServiceImpl.refresh(AuthServiceImpl.java:83)
	at com.example.expensetracker.controller.AuthController.refresh(AuthController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.example.expensetracker.logging.applog.AppLogFilter.doFilterInternal(AppLogFilter.java:30)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.expensetracker.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at test.controller.AuthControllerIT.refresh_shouldReturnUnauthorized_whenTokenInvalid(AuthControllerIT.java:156)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
11:43:47.361 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
11:43:47.380 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Неверные учётные данные
11:43:47.380 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.380 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@64c170c4]
11:43:47.380 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Невалидный токен]
11:43:47.398 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
11:43:47.398 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
11:43:47.398 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.398 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.398 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
11:43:47.398 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
11:43:47.399 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-d02cf123-c621-4283-95ba-8159c37cc3b3@example.com', passwor (truncated)...]
11:43:47.399 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-d02cf123-c621-4283-95ba-8159c37cc3b3@example.com
11:43:47.399 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:47.449 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.453 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.455 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-d02cf123-c621-4283-95ba-8159c37cc3b3@example.com
11:43:47.455 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:47.455 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@1907bfea]
11:43:47.470 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
11:43:47.470 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
11:43:47.470 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.471 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.471 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
11:43:47.471 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
11:43:47.471 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-d02cf123-c621-4283-95ba-8159c37cc3b3@example.com', passwor (truncated)...]
11:43:47.471 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-d02cf123-c621-4283-95ba-8159c37cc3b3@example.com
11:43:47.472 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
11:43:47.473 [main] WARN  c.e.e.service.AuthServiceImpl - Регистрации провалилась: почта test-d02cf123-c621-4283-95ba-8159c37cc3b3@example.com уже используется
11:43:47.473 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleDataIntegrityViolation(DataIntegrityViolationException, HttpServletRequest)
11:43:47.486 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/register message: Нарушение ограничений базы данных
11:43:47.486 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.486 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7895e748]
11:43:47.486 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: Эта почта уже используется]
11:43:47.502 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
11:43:47.502 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
11:43:47.502 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.502 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:47.502 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
11:43:47.502 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
11:43:47.502 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='', password=****}]
11:43:47.502 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
11:43:47.502 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=anonymous path=/api/auth/register errors=[Почта обязательна]
11:43:47.502 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.502 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@310568db]
11:43:47.502 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.model.User> com.example.expensetracker.controller.AuthController.register(com.example.expensetracker.dto.RegisterDto): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
11:43:47.538 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.539 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.541 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.542 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.545 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/398/ban
11:43:47.545 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/398/ban
11:43:47.545 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.545 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/398/ban
11:43:47.545 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:47.546 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.546 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.549 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.550 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.551 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:47.553 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
11:43:47.566 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/398/ban message: Отказано в доступе
11:43:47.567 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.567 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@51e0cc92]
11:43:47.567 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
11:43:47.597 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.598 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.601 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.601 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.604 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/400/ban
11:43:47.604 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/400/ban
11:43:47.604 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.604 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/400/ban
11:43:47.604 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:47.604 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.605 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.605 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.606 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.607 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:47.608 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
11:43:47.619 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/400/ban message: Отказано в доступе
11:43:47.619 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.619 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@219fe60d]
11:43:47.623 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
11:43:47.703 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.709 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.712 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/402/ban
11:43:47.712 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/402/ban
11:43:47.712 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.712 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/402/ban
11:43:47.712 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:47.712 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.713 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.713 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.714 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.716 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
11:43:47.741 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/402/ban message: Некорректный запрос
11:43:47.741 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.741 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6a9e3c3f]
11:43:47.741 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
11:43:47.891 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:47.893 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:47.895 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
11:43:47.895 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
11:43:47.895 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.895 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
11:43:47.896 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:47.896 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.896 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.897 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:47.898 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:47.899 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:47.901 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:47.915 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
11:43:47.915 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.915 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4ecf479]
11:43:47.920 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:47.968 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
11:43:47.968 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
11:43:47.968 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:47.969 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
11:43:47.969 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
11:43:47.969 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.969 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:47.970 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:47.972 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
11:43:47.994 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
11:43:47.994 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:47.994 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7720ec5]
11:43:47.994 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
11:43:48.048 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
11:43:48.048 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
11:43:48.048 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.048 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
11:43:48.048 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
11:43:48.048 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.049 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.053 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(ConstraintViolationException, HttpServletRequest)
11:43:48.068 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
11:43:48.068 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:48.068 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@69adc41]
11:43:48.069 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
11:43:48.104 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.105 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.109 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
11:43:48.109 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
11:43:48.109 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.109 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
11:43:48.109 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
11:43:48.110 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.110 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.110 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
11:43:48.111 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.113 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.113 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7d4fed27]
11:43:48.144 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.146 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.148 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
11:43:48.148 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
11:43:48.148 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.148 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
11:43:48.149 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:48.149 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.149 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.150 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:48.151 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.152 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:48.154 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
11:43:48.179 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
11:43:48.179 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
11:43:48.179 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@208e42da]
11:43:48.179 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
11:43:48.275 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.276 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.280 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.281 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.283 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/406/ban
11:43:48.283 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/406/ban
11:43:48.283 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.283 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/406/ban
11:43:48.284 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:48.284 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.284 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.285 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:48.286 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.287 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:48.288 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:48.290 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
11:43:48.292 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.292 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@159d38e3]
11:43:48.308 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:48.310 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:48.329 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.330 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.333 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/408
11:43:48.333 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/408
11:43:48.333 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.333 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/408
11:43:48.333 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
11:43:48.333 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.333 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.333 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:48.335 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.335 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5a7fb6ae]
11:43:48.366 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.368 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.371 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.372 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.374 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/409/unban
11:43:48.374 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/409/unban
11:43:48.374 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.374 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/409/unban
11:43:48.375 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
11:43:48.375 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.376 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
11:43:48.377 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:48.378 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.378 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:48.380 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
11:43:48.383 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.383 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1143f74b]
11:43:48.400 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
11:43:48.403 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
11:43:48.428 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.430 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.433 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
11:43:48.433 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
11:43:48.433 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.433 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
11:43:48.433 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
11:43:48.437 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:48.438 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.440 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.440 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5014a5c8]
11:43:48.473 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.474 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.477 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
11:43:48.477 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
11:43:48.477 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.477 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
11:43:48.477 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
11:43:48.479 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:48.480 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.481 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.481 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@53c8fcc5]
11:43:48.511 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
11:43:48.511 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
11:43:48.511 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.511 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
11:43:48.529 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
11:43:48.530 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
11:43:48.533 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
11:43:48.533 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
11:43:48.533 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
11:43:48.533 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
11:43:48.533 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
11:43:48.534 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
11:43:48.535 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
11:43:48.536 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
11:43:48.536 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6f1ff437]
11:43:48.559 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
11:43:48.679 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
11:43:48.694 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
11:43:48.695 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
11:43:48.697 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
