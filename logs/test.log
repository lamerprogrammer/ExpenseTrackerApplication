14:34:53.063 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
14:34:53.092 [main] INFO  t.c.ModeratorControllerIntegrationTest - Starting ModeratorControllerIntegrationTest using Java 17.0.16 with PID 2936 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
14:34:53.092 [main] INFO  t.c.ModeratorControllerIntegrationTest - The following 1 profile is active: "test"
14:34:53.581 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
14:34:53.582 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
14:34:53.602 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
14:34:53.603 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
14:34:53.615 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 1 Elasticsearch repository interface.
14:34:53.621 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
14:34:53.621 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:34:53.629 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
14:34:53.633 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
14:34:54.084 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
14:34:54.094 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
14:34:54.095 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
14:34:54.095 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
14:34:54.139 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
14:34:54.139 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1042 ms
14:34:54.627 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
14:34:54.737 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22105c76
14:34:54.738 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
14:34:54.824 [main] INFO  liquibase.database - Set default schema name to public
14:34:55.141 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
14:34:55.180 [main] INFO  liquibase.ui - Database is up to date, no changesets to execute
14:34:55.182 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
14:34:55.187 [main] INFO  liquibase.util - UPDATE SUMMARY
14:34:55.187 [main] INFO  liquibase.util - Run:                          0
14:34:55.187 [main] INFO  liquibase.util - Previously run:               2
14:34:55.187 [main] INFO  liquibase.util - Filtered out:                 0
14:34:55.187 [main] INFO  liquibase.util - -------------------------------
14:34:55.187 [main] INFO  liquibase.util - Total change sets:            2
14:34:55.187 [main] INFO  liquibase.util - Update summary generated
14:34:55.188 [main] INFO  liquibase.command - Command execution complete
14:34:55.795 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
14:34:55.825 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
14:34:55.841 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
14:34:56.024 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
14:34:56.048 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
14:34:56.057 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
14:34:56.488 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
14:34:56.489 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:34:56.622 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
14:34:56.622 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
14:34:56.857 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
14:34:56.915 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
14:34:57.088 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 27 mappings in 'requestMappingHandlerMapping'
14:34:57.179 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
14:34:57.253 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
14:34:57.298 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
14:34:57.341 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
14:34:57.363 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
14:34:57.555 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
14:34:57.555 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
14:34:57.556 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
14:34:57.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
14:34:57.557 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
14:34:57.589 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
14:34:57.595 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54111 (http) with context path '/'
14:34:57.601 [main] INFO  t.c.ModeratorControllerIntegrationTest - Started ModeratorControllerIntegrationTest in 4.682 seconds (process running for 5.275)
14:34:57.844 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:57.864 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:57.868 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:57.869 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:57.881 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/1/ban
14:34:57.883 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1/ban
14:34:57.883 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:57.885 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/1/ban
14:34:57.887 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:57.895 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:57.899 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:57.949 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:57.958 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:57.967 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:57.970 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
14:34:58.094 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/1/ban message: Отказано в доступе
14:34:58.105 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.105 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@e198e7f]
14:34:58.108 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
14:34:58.166 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.167 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.169 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.170 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.172 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/3/ban
14:34:58.172 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/3/ban
14:34:58.172 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.172 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/3/ban
14:34:58.172 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:58.173 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.173 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.174 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:58.175 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.176 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.178 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
14:34:58.193 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/3/ban message: Отказано в доступе
14:34:58.193 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.193 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1a596879]
14:34:58.193 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
14:34:58.225 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.226 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.228 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/5/ban
14:34:58.228 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/5/ban
14:34:58.228 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.229 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/5/ban
14:34:58.229 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:58.229 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.229 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.230 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:58.231 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.232 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
14:34:58.250 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/5/ban message: Некорректный запрос
14:34:58.250 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.250 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@38a7f7a2]
14:34:58.250 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
14:34:58.284 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.285 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.288 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
14:34:58.288 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
14:34:58.288 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.288 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
14:34:58.289 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:58.289 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.289 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.290 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:58.291 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.291 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.293 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
14:34:58.311 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
14:34:58.312 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.312 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7986302f]
14:34:58.312 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
14:34:58.346 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
14:34:58.346 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
14:34:58.347 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.347 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
14:34:58.347 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
14:34:58.348 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.348 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.349 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.352 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
14:34:58.368 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
14:34:58.368 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.368 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@525aae0c]
14:34:58.369 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
14:34:58.400 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
14:34:58.400 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
14:34:58.400 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.400 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
14:34:58.401 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
14:34:58.401 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.401 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.406 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(ConstraintViolationException, HttpServletRequest)
14:34:58.421 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
14:34:58.421 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.421 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3ebda1be]
14:34:58.422 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
14:34:58.456 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.457 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.459 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
14:34:58.459 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
14:34:58.459 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.460 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
14:34:58.460 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
14:34:58.462 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.462 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.465 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
14:34:58.466 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.472 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
14:34:58.472 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2aea50a6]
14:34:58.474 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

14:34:58.511 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.512 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.514 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
14:34:58.515 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
14:34:58.515 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.515 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
14:34:58.515 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:58.515 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.515 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.516 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:58.517 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.518 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.520 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
14:34:58.538 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
14:34:58.539 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
14:34:58.539 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6e46f5c1]
14:34:58.539 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
14:34:58.570 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.571 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.574 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.575 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.577 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/9/ban
14:34:58.577 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/9/ban
14:34:58.577 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.577 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/9/ban
14:34:58.577 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:58.577 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.577 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.578 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:58.580 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.581 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.583 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
14:34:58.587 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
14:34:58.590 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
14:34:58.590 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@79401d4f]
14:34:58.607 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
14:34:58.637 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.654 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.655 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.658 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/11
14:34:58.658 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/11
14:34:58.658 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.658 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/11
14:34:58.658 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
14:34:58.658 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.658 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.658 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.660 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
14:34:58.660 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1c6912db]
14:34:58.692 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.693 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.695 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
14:34:58.695 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
14:34:58.698 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/12/unban
14:34:58.698 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/12/unban
14:34:58.698 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
14:34:58.698 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/12/unban
14:34:58.698 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
14:34:58.699 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.699 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
14:34:58.700 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
14:34:58.701 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
14:34:58.701 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.702 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
14:34:58.705 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
14:34:58.705 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6a377a]
14:34:58.721 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
14:34:58.723 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
14:34:58.728 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
14:34:58.825 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
14:34:58.828 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
14:34:58.829 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
14:34:58.831 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
