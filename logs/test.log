16:27:08.102 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
16:27:08.172 [main] INFO  test.controller.AdminControllerIT - Starting AdminControllerIT using Java 17.0.16 with PID 2052 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
16:27:08.172 [main] INFO  test.controller.AdminControllerIT - The following 1 profile is active: "test"
16:27:09.021 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
16:27:09.023 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
16:27:09.053 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
16:27:09.054 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.ExpenseRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
16:27:09.054 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
16:27:09.065 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 1 Elasticsearch repository interface.
16:27:09.072 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
16:27:09.073 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
16:27:09.080 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
16:27:09.084 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
16:27:09.702 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
16:27:09.710 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
16:27:09.711 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
16:27:09.711 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
16:27:09.748 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
16:27:09.748 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1566 ms
16:27:10.252 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
16:27:10.380 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7545c015
16:27:10.381 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
16:27:10.507 [main] INFO  liquibase.database - Set default schema name to public
16:27:10.863 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
16:27:10.948 [main] INFO  liquibase.ui - Database is up to date, no changesets to execute
16:27:10.949 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
16:27:10.959 [main] INFO  liquibase.util - UPDATE SUMMARY
16:27:10.959 [main] INFO  liquibase.util - Run:                          0
16:27:10.959 [main] INFO  liquibase.util - Previously run:               5
16:27:10.959 [main] INFO  liquibase.util - Filtered out:                 0
16:27:10.960 [main] INFO  liquibase.util - -------------------------------
16:27:10.960 [main] INFO  liquibase.util - Total change sets:            5
16:27:10.960 [main] INFO  liquibase.util - Update summary generated
16:27:10.961 [main] INFO  liquibase.command - Command execution complete
16:27:11.695 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
16:27:11.740 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
16:27:11.766 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
16:27:11.987 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
16:27:12.024 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
16:27:12.039 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
16:27:12.761 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16:27:12.765 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
16:27:12.911 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
16:27:12.911 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
16:27:13.038 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
16:27:13.811 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
16:27:13.878 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
16:27:14.115 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
16:27:14.232 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
16:27:14.283 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
16:27:14.355 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
16:27:14.392 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
16:27:14.406 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
16:27:14.572 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
16:27:14.573 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
16:27:14.573 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
16:27:14.573 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
16:27:14.574 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
16:27:14.608 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
16:27:14.619 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 54069 (http) with context path '/'
16:27:14.625 [main] INFO  test.controller.AdminControllerIT - Started AdminControllerIT in 6.77 seconds (process running for 8.085)
16:27:14.904 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:14.908 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:14.908 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:14.908 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:14.912 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:14.945 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
16:27:14.968 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:14.968 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Некорректная почта]
16:27:14.973 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:14.973 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7434735b]
16:27:14.978 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@26993397,.*]; default message [Некорректная почта]] ]
16:27:15.100 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:15.100 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:15.101 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.101 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:15.101 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.102 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
16:27:15.103 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:15.103 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Почта обязательна]
16:27:15.103 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.103 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@71131dc]
16:27:15.103 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
16:27:15.137 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:15.137 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:15.137 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.137 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:15.137 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.137 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
16:27:15.137 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:15.137 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Некорректная почта]
16:27:15.137 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.137 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@49e5280]
16:27:15.137 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@26993397,.*]; default message [Некорректная почта]] ]
16:27:15.176 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:15.176 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:15.176 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.176 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:15.176 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.177 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
16:27:15.178 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:15.178 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Почта обязательна]
16:27:15.178 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.178 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@d43c601]
16:27:15.178 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
16:27:15.243 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.268 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.270 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.274 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:15.274 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:15.274 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.274 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:15.275 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.276 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='8e5f8fa8-bd1b-47d4-b787-84a7756b7e09@example.com', password=**** (truncated)...]
16:27:15.277 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.282 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.330 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.340 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.343 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:15.399 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.401 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:15.403 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.404 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.412 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:15.412 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@720b095a]
16:27:15.428 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:15.429 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:15.429 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.429 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:15.429 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.429 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='8e5f8fa8-bd1b-47d4-b787-84a7756b7e09@example.com', password=**** (truncated)...]
16:27:15.430 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.430 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.431 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.432 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.433 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:15.435 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
16:27:15.448 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/moderator message: Сущность уже есть
16:27:15.448 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.448 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@48575459]
16:27:15.448 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
16:27:15.478 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.479 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.480 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.483 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1025/ban
16:27:15.483 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1025/ban
16:27:15.483 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.483 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1025/ban
16:27:15.483 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:15.484 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.484 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.485 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.486 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.487 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
16:27:15.499 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/1025/ban message: Некорректный запрос
16:27:15.500 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.500 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@185898eb]
16:27:15.500 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
16:27:15.530 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.531 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.532 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.534 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/ban
16:27:15.534 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/ban
16:27:15.534 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.535 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/ban
16:27:15.535 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:15.535 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.536 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.536 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.537 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.542 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:15.544 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:15.555 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/ban message: Запрошенный ресурс не найден
16:27:15.556 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.556 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@19787318]
16:27:15.556 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:15.585 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:15.585 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:15.585 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.585 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:15.585 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.585 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='9fd7cfb7-098a-47fb-9870-565bd6dd42f5@example.com', password=****}]
16:27:15.585 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:15.585 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Имя пользователя не может быть пустым]
16:27:15.585 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.585 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6f190730]
16:27:15.585 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
16:27:15.618 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99999
16:27:15.618 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999
16:27:15.618 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.618 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99999
16:27:15.618 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
16:27:15.618 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.618 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.618 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:15.622 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
16:27:15.637 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999 message: Пользователь не найден
16:27:15.638 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.638 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1227110]
16:27:15.638 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
16:27:15.670 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.671 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.672 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.673 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:15.674 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:15.674 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.674 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:15.674 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.674 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='f5198b79-0ce1-4372-9175-6fa2a142a227@example.com', password=**** (truncated)...]
16:27:15.674 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.675 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.675 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.677 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.678 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:15.725 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.726 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:15.728 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.728 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.731 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:15.731 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@35af3c45]
16:27:15.744 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:15.807 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.808 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.809 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.811 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:15.811 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:15.811 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.811 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:15.811 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.811 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='aa33d214-b131-427f-a152-5a170c4d7ebf@example.com', password=**** (truncated)...]
16:27:15.812 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.812 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.813 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.813 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.815 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:15.861 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.861 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:15.861 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.865 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.865 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:15.865 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2ce9887a]
16:27:15.877 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:15.877 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:15.877 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.877 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:15.877 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.877 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='aa33d214-b131-427f-a152-5a170c4d7ebf@example.com', password=**** (truncated)...]
16:27:15.881 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.881 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.881 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.881 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.881 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:15.885 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
16:27:15.897 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/administrator message: Сущность уже есть
16:27:15.898 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.898 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1b5c3086]
16:27:15.898 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
16:27:15.928 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.929 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.930 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.932 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:15.933 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:15.935 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1032/demote
16:27:15.935 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1032/demote
16:27:15.936 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.936 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1032/demote
16:27:15.936 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:15.936 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.936 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:15.937 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:15.938 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:15.939 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:15.941 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:15.941 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@61c3e5aa]
16:27:15.971 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:15.971 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:15.971 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:15.971 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:15.971 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:15.971 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='3258d2e0-d1ee-4186-ae4e-1f03c5b42977@example.com', password=**** (truncated)...]
16:27:15.971 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:15.972 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Пароль обязателен]
16:27:15.972 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:15.972 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@47f18329]
16:27:15.972 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
16:27:16.001 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:16.001 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:16.002 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.002 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:16.002 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:16.002 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='115c9622-810c-4f23-b4b7-711f67ab09b1@example.com', password=**** (truncated)...]
16:27:16.002 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:16.002 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Пароль обязателен]
16:27:16.003 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.003 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3d69ff97]
16:27:16.004 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
16:27:16.036 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/-1
16:27:16.036 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/-1
16:27:16.036 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.036 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/-1
16:27:16.036 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
16:27:16.036 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.037 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.041 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
16:27:16.056 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/-1 message: должно быть больше 0
16:27:16.057 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.057 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@39f0cd9b]
16:27:16.057 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
16:27:16.089 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.090 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.091 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.093 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/promote
16:27:16.093 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/promote
16:27:16.094 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.094 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/promote
16:27:16.094 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.094 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.094 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.095 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.096 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.097 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.098 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:16.110 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/promote message: Запрошенный ресурс не найден
16:27:16.110 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.110 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3cdb38f2]
16:27:16.110 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:16.139 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
16:27:16.139 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
16:27:16.139 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.139 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
16:27:16.139 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:16.139 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='0893c5f3-d423-44e0-840d-2c450188b7f1@example.com', password=****}]
16:27:16.140 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:16.140 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Имя пользователя не может быть пустым]
16:27:16.140 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.140 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@18611d2b]
16:27:16.140 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
16:27:16.170 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.171 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.172 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.174 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/demote
16:27:16.175 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/demote
16:27:16.175 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.175 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/demote
16:27:16.175 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.175 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.175 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.176 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.177 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.178 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.179 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:16.191 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/demote message: Запрошенный ресурс не найден
16:27:16.191 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.191 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@49fb1d58]
16:27:16.192 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:16.220 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.221 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.222 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.225 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.225 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.227 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/1036/delete
16:27:16.227 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1036/delete
16:27:16.227 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.228 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/1036/delete
16:27:16.228 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.228 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.228 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.229 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.230 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.231 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.232 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:16.238 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:16.240 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.240 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@8a66453]
16:27:16.254 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:16.273 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.274 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.274 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.276 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/1037/delete
16:27:16.276 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1037/delete
16:27:16.276 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.276 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/1037/delete
16:27:16.277 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.277 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.277 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.277 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.278 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.279 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
16:27:16.291 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/1037/delete message: Некорректный запрос
16:27:16.291 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.291 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5f273e58]
16:27:16.292 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
16:27:16.364 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.365 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.367 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.370 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
16:27:16.370 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
16:27:16.370 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.370 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
16:27:16.370 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
16:27:16.370 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='98884e06-0c7d-4f0b-ae47-bfb631a98c85@example.com', password=**** (truncated)...]
16:27:16.371 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.371 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.372 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.373 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.375 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:16.425 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.426 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:16.428 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.429 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.430 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.430 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6f9a31a3]
16:27:16.448 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:16.468 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.469 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.469 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.472 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.473 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.473 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.475 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1041/promote
16:27:16.475 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1041/promote
16:27:16.475 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.475 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1041/promote
16:27:16.476 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.476 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.476 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.477 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.478 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.478 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.480 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.480 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@69c9946d]
16:27:16.512 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.513 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.515 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users
16:27:16.515 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users
16:27:16.515 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.515 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users
16:27:16.515 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getAllUsers(Pageable, HttpServletRequest)
16:27:16.517 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.517 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.520 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
16:27:16.521 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.524 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.524 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1952e482]
16:27:16.526 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

16:27:16.566 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.567 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.568 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.570 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/unban
16:27:16.570 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/unban
16:27:16.571 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.571 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/unban
16:27:16.571 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.571 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.571 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.572 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.573 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.574 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.575 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:16.587 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/unban message: Запрошенный ресурс не найден
16:27:16.587 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.587 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6eb64c03]
16:27:16.588 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:16.616 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.617 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.618 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.620 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.621 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.623 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1045/demote
16:27:16.623 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1045/demote
16:27:16.623 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.623 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1045/demote
16:27:16.623 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.623 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.623 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.624 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.625 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.625 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.627 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.627 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@60c7cc84]
16:27:16.660 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.661 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.662 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.664 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.665 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.667 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1047/ban
16:27:16.667 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1047/ban
16:27:16.667 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.667 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1047/ban
16:27:16.668 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.668 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.668 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.668 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.669 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.670 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.671 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:16.673 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:16.675 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.675 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7303e439]
16:27:16.687 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:16.690 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.708 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.709 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.711 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/1048
16:27:16.711 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1048
16:27:16.711 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.712 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/1048
16:27:16.712 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
16:27:16.712 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.712 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.712 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.714 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.714 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5d28b2d4]
16:27:16.745 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.746 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.747 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.749 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/99999/delete
16:27:16.749 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/delete
16:27:16.749 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.749 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/99999/delete
16:27:16.749 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.750 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.750 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.750 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.751 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.752 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.760 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:16.774 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/delete message: Запрошенный ресурс не найден
16:27:16.774 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:16.774 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@f50da80]
16:27:16.775 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:16.804 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.805 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.806 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.808 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.808 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.811 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.812 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:16.814 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1051/unban
16:27:16.814 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1051/unban
16:27:16.814 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.814 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1051/unban
16:27:16.815 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.815 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.815 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.815 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.816 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.817 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.818 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:16.819 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:16.821 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.821 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7c623256]
16:27:16.834 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:16.836 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.853 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.853 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.856 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.857 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:16.858 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.860 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/1053/promote
16:27:16.860 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/1053/promote
16:27:16.860 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.860 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/1053/promote
16:27:16.860 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:16.860 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.861 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
16:27:16.861 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:16.862 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:16.863 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:16.864 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:16.867 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:16.869 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.869 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7c5232f9]
16:27:16.890 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs
16:27:16.891 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs
16:27:16.891 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:16.891 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs
16:27:16.891 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getAllLogs(Pageable, HttpServletRequest)
16:27:16.891 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
16:27:16.891 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
16:27:16.985 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:16.985 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6e6d2482]
16:27:17.009 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs/user/admin@example.com
16:27:17.009 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs/user/admin@example.com
16:27:17.009 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.009 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs/user/admin@example.com
16:27:17.009 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getByUser(String, Pageable, HttpServletRequest)
16:27:17.011 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
16:27:17.011 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
16:27:17.030 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.030 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5ebdb1a7]
16:27:17.053 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:17.056 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
16:27:17.060 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
16:27:17.062 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.063 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.064 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.065 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.066 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.067 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.070 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.071 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.073 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.073 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.075 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:17.077 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
16:27:17.078 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
16:27:17.078 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.078 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
16:27:17.078 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
16:27:17.078 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.078 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.079 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
16:27:17.081 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.082 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.083 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.083 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4d046208]
16:27:17.099 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:17.100 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
16:27:17.103 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
16:27:17.104 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.104 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.105 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.106 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.107 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.107 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.109 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.110 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.112 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.112 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.114 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:17.116 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/1056
16:27:17.116 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/1056
16:27:17.117 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.117 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/1056
16:27:17.117 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
16:27:17.117 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.117 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.119 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
16:27:17.121 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.121 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.122 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.122 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@30976e6f]
16:27:17.146 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:17.147 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
16:27:17.149 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
16:27:17.150 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.150 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.151 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.152 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.153 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.153 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.156 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.156 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.158 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.159 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.161 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:17.265 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:17.268 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
16:27:17.268 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
16:27:17.268 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.268 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
16:27:17.268 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
16:27:17.269 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.269 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.269 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
16:27:17.271 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.271 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.272 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.272 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@88e1fee]
16:27:17.288 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:17.289 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
16:27:17.290 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
16:27:17.292 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
16:27:17.293 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.294 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.295 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.295 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
16:27:17.296 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.296 [main] DEBUG org.hibernate.SQL - delete from users where id=?
16:27:17.298 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.299 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.301 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.302 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.304 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:17.410 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:17.410 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/1060
16:27:17.410 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/1060
16:27:17.410 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.410 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/1060
16:27:17.410 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
16:27:17.410 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.410 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
16:27:17.414 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
16:27:17.414 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.414 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.414 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.414 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@48e9f49e]
16:27:17.440 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
16:27:17.440 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
16:27:17.440 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.441 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.441 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
16:27:17.441 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
16:27:17.441 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='7ddbcacd-b47a-42b9-9d9f-12d43f22217d', email='test-5b3a4134-5192-42cc-9da7-8b97044 (truncated)...]
16:27:17.441 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-5b3a4134-5192-42cc-9da7-8b9704440dfb@example.com
16:27:17.442 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:17.489 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.490 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.491 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-5b3a4134-5192-42cc-9da7-8b9704440dfb@example.com
16:27:17.494 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.494 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@5979f2c8]
16:27:17.522 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.523 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.524 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:17.525 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:17.527 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-5b3a4134-5192-42cc-9da7-8b9704440dfb@example.com
16:27:17.573 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
16:27:17.573 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
16:27:17.573 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.573 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.573 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
16:27:17.573 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
16:27:17.573 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTViM2E0MTM0LTUxOTItNDJjYy05ZGE3LTh (truncated)...]
16:27:17.577 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
16:27:17.577 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
16:27:17.596 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.597 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.599 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-5b3a4134-5192-42cc-9da7-8b9704440dfb@example.com заблокирован
16:27:17.599 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
16:27:17.611 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Отказано в доступе
16:27:17.611 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:17.611 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@45478c69]
16:27:17.612 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Ваш аккаунт заблокирован]
16:27:17.626 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
16:27:17.626 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
16:27:17.626 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.626 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.626 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
16:27:17.626 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
16:27:17.626 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='44dd320f-0897-4c49-b716-ad85a863f8be', email='test-194057dd-cb14-436d-8922-bb4d0d3 (truncated)...]
16:27:17.627 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-194057dd-cb14-436d-8922-bb4d0d3a4094@example.com
16:27:17.627 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:17.674 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.675 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.677 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-194057dd-cb14-436d-8922-bb4d0d3a4094@example.com
16:27:17.677 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.677 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@5037fb9a]
16:27:17.690 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
16:27:17.690 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
16:27:17.690 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.690 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.690 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
16:27:17.690 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
16:27:17.691 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-194057dd-cb14-436d-8922-bb4d0d3a4094@example.com, password=invalidPassword]]
16:27:17.692 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-194057dd-cb14-436d-8922-bb4d0d3a4094@example.com
16:27:17.692 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.693 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.740 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: не верный пароль для почты test-194057dd-cb14-436d-8922-bb4d0d3a4094@example.com
16:27:17.740 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
16:27:17.752 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
16:27:17.752 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:17.752 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2212ba6d]
16:27:17.752 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный пароль]
16:27:17.767 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
16:27:17.767 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
16:27:17.767 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.767 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.767 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
16:27:17.767 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
16:27:17.767 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-083e5598-ebc8-4b35-bf1a-04a8289e2261@example.com, password=123]]
16:27:17.767 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-083e5598-ebc8-4b35-bf1a-04a8289e2261@example.com
16:27:17.768 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.769 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: почта test-083e5598-ebc8-4b35-bf1a-04a8289e2261@example.com не найдена
16:27:17.769 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
16:27:17.780 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
16:27:17.780 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:17.780 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5db6205a]
16:27:17.781 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверная почта]
16:27:17.798 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-50855264-b707-4fe4-88a8-c87ad6623789@example.com
16:27:17.798 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
16:27:17.798 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
16:27:17.798 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.798 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.798 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
16:27:17.798 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
16:27:17.798 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTUwODU1MjY0LWI3MDctNGZlNC04OGE4LWM (truncated)...]
16:27:17.798 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
16:27:17.798 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
16:27:17.798 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.800 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-50855264-b707-4fe4-88a8-c87ad6623789@example.com не найден
16:27:17.800 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUsernameNotFound(UsernameNotFoundException, HttpServletRequest)
16:27:17.816 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Пользователь не найден
16:27:17.816 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:17.816 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@74b642d9]
16:27:17.817 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.core.userdetails.UsernameNotFoundException: Пользователь не найден]
16:27:17.831 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
16:27:17.831 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
16:27:17.831 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.831 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.831 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
16:27:17.831 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
16:27:17.831 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com', password=*** (truncated)...]
16:27:17.832 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.832 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:17.877 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:17.880 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:17.882 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.882 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.882 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@62b84334]
16:27:17.898 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
16:27:17.898 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
16:27:17.898 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.898 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.898 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
16:27:17.898 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
16:27:17.898 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com, password=123]]
16:27:17.898 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.898 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.899 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.945 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная авторизация: test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.945 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.946 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.947 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.948 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTBjNmVjOGYwLWNhOWQtNGE4OC04OTY4LWJhN (truncated)...]
16:27:17.969 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
16:27:17.969 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
16:27:17.969 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.969 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.969 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
16:27:17.969 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
16:27:17.969 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTBjNmVjOGYwLWNhOWQtNGE4OC04OTY4LWJ (truncated)...]
16:27:17.969 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
16:27:17.969 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
16:27:17.969 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:17.973 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:17.974 [main] INFO  c.e.e.service.AuthServiceImpl - Успешное обновление токена, пользователя test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.974 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.974 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-0c6ec8f0-ca9d-4a88-8968-ba5df415c23f@example.com
16:27:17.975 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:17.975 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTBjNmVjOGYwLWNhOWQtNGE4OC04OTY4LWJhN (truncated)...]
16:27:17.990 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
16:27:17.990 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
16:27:17.990 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:17.990 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:17.990 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
16:27:17.990 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
16:27:17.990 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=invalidToken]]
16:27:17.990 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
16:27:17.990 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
16:27:17.990 [main] ERROR c.e.e.service.AuthServiceImpl - Ошибка обновление токена, пользователя Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.expensetracker.security.JwtUtil.parse(JwtUtil.java:63)
	at com.example.expensetracker.service.AuthServiceImpl.refresh(AuthServiceImpl.java:81)
	at com.example.expensetracker.controller.AuthController.refresh(AuthController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.example.expensetracker.logging.applog.AppLogFilter.doFilterInternal(AppLogFilter.java:30)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.expensetracker.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at test.controller.AuthControllerIT.refresh_shouldReturnUnauthorized_whenTokenInvalid(AuthControllerIT.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
16:27:17.990 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
16:27:18.009 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Неверные учётные данные
16:27:18.009 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.009 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@590ed9d6]
16:27:18.010 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Невалидный токен]
16:27:18.024 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
16:27:18.024 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
16:27:18.025 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.025 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:18.025 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
16:27:18.025 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
16:27:18.025 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-b5bc37f7-15da-4ac5-a443-306c973d241d@example.com', password=*** (truncated)...]
16:27:18.025 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-b5bc37f7-15da-4ac5-a443-306c973d241d@example.com
16:27:18.025 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:18.071 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.071 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.076 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-b5bc37f7-15da-4ac5-a443-306c973d241d@example.com
16:27:18.076 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.076 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@2644facd]
16:27:18.099 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
16:27:18.099 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
16:27:18.099 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.099 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:18.099 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
16:27:18.099 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
16:27:18.100 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-b5bc37f7-15da-4ac5-a443-306c973d241d@example.com', password=*** (truncated)...]
16:27:18.100 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-b5bc37f7-15da-4ac5-a443-306c973d241d@example.com
16:27:18.100 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
16:27:18.101 [main] WARN  c.e.e.service.AuthServiceImpl - Регистрации провалилась: почта test-b5bc37f7-15da-4ac5-a443-306c973d241d@example.com уже используется
16:27:18.101 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleDataIntegrityViolation(DataIntegrityViolationException, HttpServletRequest)
16:27:18.114 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/register message: Нарушение ограничений базы данных
16:27:18.114 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.114 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@8134451]
16:27:18.114 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: Эта почта уже используется]
16:27:18.133 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
16:27:18.133 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
16:27:18.133 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.133 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
16:27:18.133 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
16:27:18.133 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
16:27:18.133 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='', password=****}]
16:27:18.133 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:18.133 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=anonymous path=/api/auth/register errors=[Почта обязательна]
16:27:18.134 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.134 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@11cbedc4]
16:27:18.134 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.model.User> com.example.expensetracker.controller.AuthController.register(com.example.expensetracker.dto.RegisterDto): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
16:27:18.172 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.173 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.176 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.177 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.179 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/report
16:27:18.179 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/report
16:27:18.179 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.179 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/report
16:27:18.179 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#report(DateRangeDto, UserDetailsImpl, HttpServletRequest)
16:27:18.193 [main] DEBUG org.hibernate.SQL - select coalesce(c1_0.name,'UNCATEGORIZED'),sum(e1_0.amount) from expenses e1_0 left join categories c1_0 on c1_0.id=e1_0.category_id where e1_0.user_id=? and e1_0.occurred_at between ? and ? group by c1_0.name
16:27:18.203 [main] DEBUG org.hibernate.SQL - select coalesce(sum(e1_0.amount),0) from expenses e1_0 where e1_0.user_id=? and e1_0.occurred_at between ? and ?
16:27:18.204 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.204 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7c965312]
16:27:18.239 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.240 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.243 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.244 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.245 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/total
16:27:18.245 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/total
16:27:18.245 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.245 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/total
16:27:18.245 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#getTotal(UserDetailsImpl, HttpServletRequest)
16:27:18.249 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.251 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.251 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1c80d25e]
16:27:18.282 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.284 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.287 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.287 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.288 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/report
16:27:18.289 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/report
16:27:18.289 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.289 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/report
16:27:18.289 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#report(DateRangeDto, UserDetailsImpl, HttpServletRequest)
16:27:18.289 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:18.290 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/expenses/report errors=[from должен быть раньше to]
16:27:18.290 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.290 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@75abc74]
16:27:18.290 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.ExpensesReportDto>> com.example.expensetracker.controller.ExpenseController.report(com.example.expensetracker.dto.DateRangeDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'dateRangeDto' on field 'validRange': rejected value [false]; codes [AssertTrue.dateRangeDto.validRange,AssertTrue.validRange,AssertTrue.boolean,AssertTrue]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [dateRangeDto.validRange,validRange]; arguments []; default message [validRange]]; default message [from должен быть раньше to]] ]
16:27:18.327 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.328 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.329 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.332 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.333 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.334 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.335 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.336 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.338 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/1070/ban
16:27:18.338 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1070/ban
16:27:18.338 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.338 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/1070/ban
16:27:18.338 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.338 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.339 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.341 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.342 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.343 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.344 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
16:27:18.357 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/1070/ban message: Отказано в доступе
16:27:18.357 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.357 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@edaa89d]
16:27:18.357 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
16:27:18.386 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.388 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.388 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.390 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.391 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.392 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.393 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.393 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.395 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/1072/ban
16:27:18.395 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1072/ban
16:27:18.395 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.395 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/1072/ban
16:27:18.395 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.395 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.395 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.396 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.397 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.397 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.399 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
16:27:18.410 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/1072/ban message: Отказано в доступе
16:27:18.410 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.410 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@13cc58c2]
16:27:18.411 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
16:27:18.440 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.442 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.443 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.445 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.446 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.447 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/1073/ban
16:27:18.447 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1073/ban
16:27:18.447 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.447 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/1073/ban
16:27:18.447 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.447 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.447 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.449 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.449 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.451 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
16:27:18.473 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/1073/ban message: Некорректный запрос
16:27:18.473 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.473 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@41cdc78e]
16:27:18.473 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
16:27:18.505 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.506 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.507 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.510 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.510 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.526 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.528 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.528 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.530 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
16:27:18.530 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
16:27:18.530 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.530 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
16:27:18.530 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.531 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.531 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.531 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.532 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.533 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.534 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:18.546 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
16:27:18.546 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.546 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@13d66068]
16:27:18.546 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:18.576 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.577 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.578 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.580 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.581 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.582 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
16:27:18.582 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
16:27:18.582 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.582 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
16:27:18.582 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
16:27:18.583 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.583 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.583 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.584 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
16:27:18.598 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
16:27:18.598 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.598 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@59971424]
16:27:18.598 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
16:27:18.626 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.627 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.628 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.630 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.630 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.632 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
16:27:18.632 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
16:27:18.632 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.632 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
16:27:18.632 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
16:27:18.632 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.632 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.632 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
16:27:18.645 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
16:27:18.645 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.645 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4702c0a8]
16:27:18.645 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
16:27:18.673 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.674 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.675 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.677 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.678 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.679 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.679 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.681 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
16:27:18.681 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
16:27:18.681 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.681 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
16:27:18.681 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
16:27:18.682 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.682 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.683 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
16:27:18.684 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.685 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.686 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.686 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2919a9e5]
16:27:18.720 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.721 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.722 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.724 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.724 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.740 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.741 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.741 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.743 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
16:27:18.743 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
16:27:18.743 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.743 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
16:27:18.744 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.744 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.744 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.745 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.746 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.747 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.748 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
16:27:18.764 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
16:27:18.764 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:18.764 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@13373658]
16:27:18.764 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
16:27:18.797 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.798 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.799 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.801 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.802 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.803 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.803 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.805 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/1083/ban
16:27:18.805 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1083/ban
16:27:18.805 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.805 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/1083/ban
16:27:18.805 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.805 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.806 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.806 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.807 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.807 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.809 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:18.810 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:18.812 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.812 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@370f7ac]
16:27:18.824 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:18.825 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.843 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.844 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.845 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.847 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.847 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.848 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.849 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.851 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/1085
16:27:18.851 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1085
16:27:18.851 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.851 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/1085
16:27:18.851 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
16:27:18.851 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.851 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.852 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.854 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.854 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4c05a831]
16:27:18.883 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.884 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.885 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.887 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.888 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.903 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.904 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.906 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.907 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:18.909 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.910 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.910 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:18.912 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/1087/unban
16:27:18.912 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/1087/unban
16:27:18.912 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:18.912 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/1087/unban
16:27:18.912 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
16:27:18.912 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.912 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
16:27:18.913 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:18.914 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:18.915 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.916 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:18.918 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:18.919 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:18.919 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4f0a629a]
16:27:18.931 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
16:27:18.933 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:18.955 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:18.956 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.005 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:19.007 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:19.011 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
16:27:19.011 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
16:27:19.011 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.011 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
16:27:19.011 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
16:27:19.012 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=]]
16:27:19.014 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:19.014 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите новый пароль]
16:27:19.014 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:19.014 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6793c4b0]
16:27:19.015 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'newPassword': rejected value []; codes [NotBlank.changePasswordRequest.newPassword,NotBlank.newPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.newPassword,newPassword]; arguments []; default message [newPassword]]; default message [Введите новый пароль]] ]
16:27:19.048 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:19.049 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.052 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
16:27:19.052 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
16:27:19.052 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.052 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
16:27:19.052 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
16:27:19.052 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=, newPassword=newPass]]
16:27:19.053 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
16:27:19.053 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите старый пароль]
16:27:19.053 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:19.053 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@573163aa]
16:27:19.053 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'oldPassword': rejected value []; codes [NotBlank.changePasswordRequest.oldPassword,NotBlank.oldPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.oldPassword,oldPassword]; arguments []; default message [oldPassword]]; default message [Введите старый пароль]] ]
16:27:19.084 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:19.085 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.086 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.088 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
16:27:19.088 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
16:27:19.088 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.088 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
16:27:19.088 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
16:27:19.089 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:19.090 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:19.091 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:19.091 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@604a8687]
16:27:19.121 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:19.122 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.124 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
16:27:19.124 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
16:27:19.124 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.124 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
16:27:19.124 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
16:27:19.125 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:19.126 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:19.127 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:19.127 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@239fd906]
16:27:19.156 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
16:27:19.156 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
16:27:19.156 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.156 [main] WARN  c.e.e.security.JwtAuthFilter - Отсутствует токен - пользователь не аутентифицирован
16:27:19.175 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:19.176 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.222 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:19.225 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:19.227 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
16:27:19.227 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
16:27:19.227 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.227 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
16:27:19.227 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
16:27:19.228 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=invalidPassword, newPassword=newPass]]
16:27:19.228 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:19.229 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:19.277 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
16:27:19.292 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: user@example.com path: /api/users/change-password message: Неверные учётные данные
16:27:19.292 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
16:27:19.292 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5be9c98c]
16:27:19.293 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный старый пароль]
16:27:19.325 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:19.326 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.371 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
16:27:19.376 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:19.378 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
16:27:19.378 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
16:27:19.378 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.378 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
16:27:19.378 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
16:27:19.378 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=newPass]]
16:27:19.379 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:19.380 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:19.474 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
16:27:19.476 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
16:27:19.478 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:19.478 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3f0e1323]
16:27:19.508 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
16:27:19.509 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.510 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
16:27:19.511 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
16:27:19.512 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
16:27:19.512 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
16:27:19.512 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
16:27:19.512 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
16:27:19.512 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
16:27:19.513 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
16:27:19.514 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
16:27:19.514 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@263b8418]
16:27:19.532 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
16:27:19.656 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
16:27:19.666 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
16:27:19.667 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
16:27:19.667 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
