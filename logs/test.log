10:38:57.943 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
10:38:58.002 [main] INFO  test.controller.AdminControllerIT - Starting AdminControllerIT using Java 17.0.16 with PID 10720 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
10:38:58.002 [main] INFO  test.controller.AdminControllerIT - The following 1 profile is active: "test"
10:38:58.803 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
10:38:58.803 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
10:38:58.831 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
10:38:58.831 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
10:38:58.843 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 1 Elasticsearch repository interface.
10:38:58.847 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
10:38:58.847 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
10:38:58.856 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
10:38:58.860 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
10:38:59.483 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
10:38:59.492 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
10:38:59.492 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:38:59.492 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
10:38:59.529 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:38:59.529 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1513 ms
10:39:00.054 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
10:39:00.097 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
10:39:00.127 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
10:39:00.351 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
10:39:00.376 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
10:39:00.504 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@76b4b57f
10:39:00.504 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
10:39:00.533 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
10:39:00.548 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
10:39:01.265 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
10:39:01.269 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
10:39:01.433 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
10:39:01.433 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
10:39:01.667 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
10:39:01.712 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
10:39:01.908 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 28 mappings in 'requestMappingHandlerMapping'
10:39:02.025 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
10:39:02.082 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
10:39:02.125 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
10:39:02.159 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
10:39:02.172 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
10:39:02.327 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
10:39:02.327 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
10:39:02.329 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
10:39:02.329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
10:39:02.329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
10:39:02.404 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
10:39:02.413 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 51973 (http) with context path '/'
10:39:02.418 [main] INFO  test.controller.AdminControllerIT - Started AdminControllerIT in 4.715 seconds (process running for 5.988)
10:39:02.689 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:02.693 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:02.693 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:02.698 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:02.698 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:02.733 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
10:39:02.760 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:02.761 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Некорректная почта]
10:39:02.765 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:02.765 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@85aec2c]
10:39:02.773 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@4d53d4f,.*]; default message [Некорректная почта]] ]
10:39:02.882 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:02.882 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:02.882 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:02.882 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:02.882 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:02.886 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
10:39:02.886 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:02.886 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Почта обязательна]
10:39:02.886 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:02.886 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@72fa2215]
10:39:02.886 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
10:39:02.918 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:02.918 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:02.918 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:02.918 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:02.918 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:02.918 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
10:39:02.918 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:02.918 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Некорректная почта]
10:39:02.918 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:02.918 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7a66f673]
10:39:02.918 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@4d53d4f,.*]; default message [Некорректная почта]] ]
10:39:02.952 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:02.952 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:02.952 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:02.952 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:02.953 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:02.953 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
10:39:02.953 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:02.953 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Почта обязательна]
10:39:02.954 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:02.954 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@108854a3]
10:39:02.954 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
10:39:03.014 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.049 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.056 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:03.056 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:03.056 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.056 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:03.056 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.057 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='cbd2544b-6d86-415b-84c6-caf3229929b3@example.com', password=**** (truncated)...]
10:39:03.058 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.063 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.133 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.145 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.147 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:03.203 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.204 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:03.206 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.207 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.213 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:03.213 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@13e7d3d7]
10:39:03.229 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:03.229 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:03.229 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.229 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:03.229 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.229 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='cbd2544b-6d86-415b-84c6-caf3229929b3@example.com', password=**** (truncated)...]
10:39:03.229 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.230 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.230 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.231 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.233 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:03.235 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
10:39:03.247 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/moderator message: Сущность уже есть
10:39:03.248 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.248 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@515a3839]
10:39:03.248 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
10:39:03.276 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.277 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.280 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/59/ban
10:39:03.280 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/59/ban
10:39:03.280 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.280 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/59/ban
10:39:03.280 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:03.281 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.281 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.282 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.283 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.284 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
10:39:03.298 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/59/ban message: Некорректный запрос
10:39:03.298 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.298 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@122e50c7]
10:39:03.298 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
10:39:03.326 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.327 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.330 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/ban
10:39:03.330 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/ban
10:39:03.330 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.330 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/ban
10:39:03.330 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:03.330 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.330 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.331 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.332 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.339 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:03.341 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:03.354 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/ban message: Запрошенный ресурс не найден
10:39:03.354 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.354 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2d087ab9]
10:39:03.354 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:03.380 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:03.380 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:03.380 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.380 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:03.381 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.381 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='b35f5545-ad80-4a85-8e7f-b8a87b9471ba@example.com', password=****}]
10:39:03.381 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:03.381 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Имя пользователя не может быть пустым]
10:39:03.382 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.382 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2a1ded4f]
10:39:03.382 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
10:39:03.410 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99999
10:39:03.410 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999
10:39:03.410 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.410 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99999
10:39:03.411 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
10:39:03.411 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.411 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.412 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:03.414 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
10:39:03.433 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999 message: Пользователь не найден
10:39:03.433 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.433 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3ef4d1e9]
10:39:03.433 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
10:39:03.462 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.463 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.465 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:03.466 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:03.466 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.466 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:03.466 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.466 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='70a1defb-2129-42a3-a967-14151ad49e66@example.com', password=**** (truncated)...]
10:39:03.466 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.467 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.468 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.468 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.470 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:03.515 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.518 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:03.519 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.520 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.522 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:03.522 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2801725]
10:39:03.536 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:03.594 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.595 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.597 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:03.597 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:03.597 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.598 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:03.598 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.598 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='f389e7f7-4e5c-4368-9a77-8c4f32a14655@example.com', password=**** (truncated)...]
10:39:03.598 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.598 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.599 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.601 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.602 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:03.649 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.650 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:03.652 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.652 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.654 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:03.654 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1265e404]
10:39:03.669 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:03.669 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:03.669 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.669 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:03.669 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.670 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='f389e7f7-4e5c-4368-9a77-8c4f32a14655@example.com', password=**** (truncated)...]
10:39:03.670 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.670 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.671 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.672 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.673 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:03.674 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
10:39:03.690 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/administrator message: Сущность уже есть
10:39:03.690 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.690 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@68ee6549]
10:39:03.690 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
10:39:03.722 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.723 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.726 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.727 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.729 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/66/demote
10:39:03.729 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/66/demote
10:39:03.729 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.729 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/66/demote
10:39:03.729 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:03.730 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.730 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.731 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.732 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.732 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:03.735 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:03.735 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@42b8af3a]
10:39:03.763 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:03.763 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:03.763 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.763 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:03.763 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.763 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='2780a043-ad86-4009-a643-4025d41da4ad@example.com', password=**** (truncated)...]
10:39:03.764 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:03.764 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Пароль обязателен]
10:39:03.764 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.764 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1a0525a7]
10:39:03.765 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
10:39:03.792 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:03.792 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:03.793 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.793 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:03.793 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.793 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='b660bc53-a80f-40f1-9577-f83f8bfd03a3@example.com', password=**** (truncated)...]
10:39:03.794 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:03.794 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Пароль обязателен]
10:39:03.794 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.794 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7ad45b4b]
10:39:03.794 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
10:39:03.827 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/-1
10:39:03.827 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/-1
10:39:03.827 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.827 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/-1
10:39:03.827 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
10:39:03.828 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.828 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.833 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
10:39:03.847 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/-1 message: должно быть больше 0
10:39:03.847 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.847 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@60ea6f69]
10:39:03.847 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
10:39:03.883 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.883 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.887 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/promote
10:39:03.887 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/promote
10:39:03.887 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.888 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/promote
10:39:03.888 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:03.888 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.888 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.889 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.891 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.892 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:03.893 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:03.908 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/promote message: Запрошенный ресурс не найден
10:39:03.908 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.909 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@24ff1b31]
10:39:03.909 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:03.937 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
10:39:03.937 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
10:39:03.937 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.937 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
10:39:03.937 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:03.938 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='ba11e24e-9e17-40a9-ab20-f618a3c1088b@example.com', password=****}]
10:39:03.938 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:03.938 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Имя пользователя не может быть пустым]
10:39:03.938 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.938 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1171c569]
10:39:03.939 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
10:39:03.965 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:03.966 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:03.969 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/demote
10:39:03.969 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/demote
10:39:03.969 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:03.969 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/demote
10:39:03.969 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:03.969 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.969 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:03.970 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:03.971 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:03.972 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:03.973 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:03.985 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/demote message: Запрошенный ресурс не найден
10:39:03.985 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:03.985 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@bd00d79]
10:39:03.985 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:04.013 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.015 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.017 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.018 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.020 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/70/delete
10:39:04.020 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/70/delete
10:39:04.020 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.020 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/70/delete
10:39:04.021 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.021 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.021 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.022 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.023 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.024 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.025 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.031 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:04.033 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.033 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@57eed99b]
10:39:04.049 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.066 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.067 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.070 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/71/delete
10:39:04.070 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/71/delete
10:39:04.070 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.070 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/71/delete
10:39:04.070 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.071 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.071 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.072 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.073 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.074 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
10:39:04.088 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/71/delete message: Некорректный запрос
10:39:04.088 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:04.088 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@48cbeb61]
10:39:04.089 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
10:39:04.124 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.126 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.128 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
10:39:04.128 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
10:39:04.128 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.129 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
10:39:04.129 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
10:39:04.129 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='a9ee7409-0f4b-4d1c-98a4-7fb4f8f4cf7c@example.com', password=**** (truncated)...]
10:39:04.129 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.129 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.130 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.131 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.133 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:04.179 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.181 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.182 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.183 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.185 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.185 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@37116413]
10:39:04.200 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.217 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.218 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.220 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.221 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.223 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/75/promote
10:39:04.223 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/75/promote
10:39:04.223 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.223 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/75/promote
10:39:04.224 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.224 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.224 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.225 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.225 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.226 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.228 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.228 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2286efbd]
10:39:04.255 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.256 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.258 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users
10:39:04.258 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users
10:39:04.258 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.258 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users
10:39:04.258 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getAllUsers(Pageable, HttpServletRequest)
10:39:04.260 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.261 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.263 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
10:39:04.264 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.267 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.268 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@268d85a1]
10:39:04.269 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

10:39:04.304 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.306 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.308 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/unban
10:39:04.308 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/unban
10:39:04.308 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.308 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/unban
10:39:04.308 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.308 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.309 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.309 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.310 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.311 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.313 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:04.325 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/unban message: Запрошенный ресурс не найден
10:39:04.325 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:04.325 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5f350ba7]
10:39:04.325 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:04.352 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.353 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.355 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.356 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.358 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/79/demote
10:39:04.358 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/79/demote
10:39:04.358 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.358 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/79/demote
10:39:04.358 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.358 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.358 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.359 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.360 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.361 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.362 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.362 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@14ec5474]
10:39:04.388 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.389 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.391 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.392 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.394 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/81/ban
10:39:04.394 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/81/ban
10:39:04.394 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.394 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/81/ban
10:39:04.394 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.395 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.395 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.395 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.396 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.397 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.398 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.400 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:04.402 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.402 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@32056ed9]
10:39:04.415 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.417 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.432 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.433 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.436 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/82
10:39:04.436 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/82
10:39:04.436 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.436 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/82
10:39:04.436 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
10:39:04.437 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.437 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.437 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.438 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.438 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@86e68a1]
10:39:04.467 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.468 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.470 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/99999/delete
10:39:04.470 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/delete
10:39:04.471 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.471 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/99999/delete
10:39:04.471 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.471 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.471 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.472 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.472 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.473 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.475 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:04.490 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/delete message: Запрошенный ресурс не найден
10:39:04.490 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:04.491 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@340975ea]
10:39:04.491 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:04.518 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.520 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.522 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.523 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.527 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.528 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:04.530 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/85/unban
10:39:04.530 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/85/unban
10:39:04.530 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.530 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/85/unban
10:39:04.530 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.531 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.531 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.532 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.532 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.533 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.534 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.536 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:04.538 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.538 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7a2f4fde]
10:39:04.553 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.556 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.574 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.575 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.578 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.578 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.581 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/87/promote
10:39:04.581 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/87/promote
10:39:04.581 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.581 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/87/promote
10:39:04.581 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:04.581 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.581 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
10:39:04.582 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:04.583 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.584 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.585 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.589 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.591 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.591 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2ba0131c]
10:39:04.613 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs
10:39:04.613 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs
10:39:04.613 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.613 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs
10:39:04.613 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getAllLogs(Pageable, HttpServletRequest)
10:39:04.613 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
10:39:04.613 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
10:39:04.715 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.715 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2f234139]
10:39:04.737 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs/user/admin@example.com
10:39:04.737 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs/user/admin@example.com
10:39:04.737 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.737 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs/user/admin@example.com
10:39:04.737 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getByUser(String, Pageable, HttpServletRequest)
10:39:04.737 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
10:39:04.737 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
10:39:04.767 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.767 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@46d9cb65]
10:39:04.788 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.793 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
10:39:04.797 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
10:39:04.798 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.799 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.800 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:04.801 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:04.802 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:04.803 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:04.806 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.807 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.809 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.809 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.811 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.814 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
10:39:04.814 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
10:39:04.814 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.814 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
10:39:04.814 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
10:39:04.814 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:04.814 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:04.815 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
10:39:04.817 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.818 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.819 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.819 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6a345168]
10:39:04.835 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.836 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
10:39:04.838 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
10:39:04.839 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.840 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.841 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:04.841 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:04.842 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:04.843 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:04.845 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.846 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.847 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.848 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.851 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.854 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/90
10:39:04.854 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/90
10:39:04.854 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.854 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/90
10:39:04.854 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
10:39:04.854 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:04.854 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:04.857 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
10:39:04.859 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.859 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:04.860 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:04.860 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@83757fc]
10:39:04.876 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:04.877 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
10:39:04.879 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
10:39:04.880 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.881 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:04.882 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:04.882 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:04.883 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:04.884 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:04.886 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.887 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.888 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:04.890 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:04.892 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.996 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:04.999 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
10:39:04.999 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
10:39:04.999 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:04.999 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
10:39:04.999 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
10:39:04.999 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:05.000 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:05.000 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
10:39:05.001 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.002 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.003 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.003 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@148778ff]
10:39:05.020 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:05.021 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
10:39:05.021 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
10:39:05.023 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false)
10:39:05.025 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.025 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.026 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:05.027 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
10:39:05.027 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:05.028 [main] DEBUG org.hibernate.SQL - delete from users where id=?
10:39:05.030 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.031 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.033 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.034 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.035 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:05.140 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:05.143 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/94
10:39:05.143 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/94
10:39:05.143 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.143 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/94
10:39:05.143 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
10:39:05.144 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:05.144 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
10:39:05.145 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
10:39:05.146 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.147 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.147 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.147 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@41d98ec2]
10:39:05.170 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
10:39:05.170 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
10:39:05.170 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.171 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.171 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
10:39:05.171 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
10:39:05.171 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='e551ece6-c8a3-4582-beeb-2f89127f9156', email='test-1f3fffcb-fa82-44c8-bbc3-2857d5b (truncated)...]
10:39:05.172 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-1f3fffcb-fa82-44c8-bbc3-2857d5bcaa4c@example.com
10:39:05.172 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:05.219 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.220 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.222 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-1f3fffcb-fa82-44c8-bbc3-2857d5bcaa4c@example.com
10:39:05.224 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.224 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@468ff884]
10:39:05.250 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.251 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.252 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.253 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:05.257 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-1f3fffcb-fa82-44c8-bbc3-2857d5bcaa4c@example.com
10:39:05.306 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
10:39:05.306 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
10:39:05.306 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.306 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.306 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
10:39:05.306 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
10:39:05.309 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTFmM2ZmZmNiLWZhODItNDRjOC1iYmMzLTI (truncated)...]
10:39:05.310 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
10:39:05.310 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
10:39:05.328 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.330 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.331 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-1f3fffcb-fa82-44c8-bbc3-2857d5bcaa4c@example.com заблокирован
10:39:05.331 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
10:39:05.345 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Отказано в доступе
10:39:05.345 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.345 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@73526b2d]
10:39:05.345 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Ваш аккаунт заблокирован]
10:39:05.361 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
10:39:05.361 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
10:39:05.361 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.361 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.361 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
10:39:05.361 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
10:39:05.361 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='4cef439b-c0f9-4133-b2c0-0d23b3ddc545', email='test-e6cacab3-3ede-49fc-9aeb-9827f7a (truncated)...]
10:39:05.362 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-e6cacab3-3ede-49fc-9aeb-9827f7a786b1@example.com
10:39:05.363 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:05.410 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.411 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.412 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-e6cacab3-3ede-49fc-9aeb-9827f7a786b1@example.com
10:39:05.413 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.413 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@64ab9d28]
10:39:05.427 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
10:39:05.427 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
10:39:05.427 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.427 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.427 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
10:39:05.428 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
10:39:05.429 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-e6cacab3-3ede-49fc-9aeb-9827f7a786b1@example.com, password=invalidPassword]]
10:39:05.429 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-e6cacab3-3ede-49fc-9aeb-9827f7a786b1@example.com
10:39:05.429 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.431 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.476 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: не верный пароль для почты test-e6cacab3-3ede-49fc-9aeb-9827f7a786b1@example.com
10:39:05.476 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
10:39:05.492 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
10:39:05.493 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.493 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@34db6d5]
10:39:05.493 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный пароль]
10:39:05.509 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
10:39:05.509 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
10:39:05.509 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.509 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.509 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
10:39:05.509 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
10:39:05.509 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-c9b3edac-0ed2-4c9e-a737-6972e00ee169@example.com, password=123]]
10:39:05.510 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-c9b3edac-0ed2-4c9e-a737-6972e00ee169@example.com
10:39:05.510 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.511 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: почта test-c9b3edac-0ed2-4c9e-a737-6972e00ee169@example.com не найдена
10:39:05.511 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
10:39:05.523 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
10:39:05.523 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.523 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@333a33eb]
10:39:05.523 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверная почта]
10:39:05.540 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-2ddb7091-282d-4571-baed-abd7846840e5@example.com
10:39:05.540 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
10:39:05.540 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
10:39:05.540 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.540 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.541 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
10:39:05.541 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
10:39:05.541 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTJkZGI3MDkxLTI4MmQtNDU3MS1iYWVkLWF (truncated)...]
10:39:05.541 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
10:39:05.541 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
10:39:05.542 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.543 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-2ddb7091-282d-4571-baed-abd7846840e5@example.com не найден
10:39:05.543 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUsernameNotFound(UsernameNotFoundException, HttpServletRequest)
10:39:05.558 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Пользователь не найден
10:39:05.559 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.559 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7cc4c613]
10:39:05.559 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.core.userdetails.UsernameNotFoundException: Пользователь не найден]
10:39:05.574 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
10:39:05.574 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
10:39:05.574 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.574 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.574 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
10:39:05.574 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
10:39:05.574 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com', passwor (truncated)...]
10:39:05.574 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.575 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:05.621 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.623 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.626 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.626 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.626 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@1964cea2]
10:39:05.638 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
10:39:05.638 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
10:39:05.638 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.639 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.639 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
10:39:05.639 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
10:39:05.639 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com, password=123]]
10:39:05.639 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.639 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.640 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.687 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная авторизация: test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.687 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.687 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.687 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.687 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTQ0ZWNkNmM1LWVmNzgtNGExMC05ZGNkLTM0N (truncated)...]
10:39:05.714 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
10:39:05.714 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
10:39:05.714 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.714 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.714 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
10:39:05.714 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
10:39:05.714 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTQ0ZWNkNmM1LWVmNzgtNGExMC05ZGNkLTM (truncated)...]
10:39:05.715 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
10:39:05.715 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
10:39:05.716 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.717 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.718 [main] INFO  c.e.e.service.AuthServiceImpl - Успешное обновление токена, пользователя test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.718 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.718 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-44ecd6c5-ef78-4a10-9dcd-345a97513266@example.com
10:39:05.718 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.718 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTQ0ZWNkNmM1LWVmNzgtNGExMC05ZGNkLTM0N (truncated)...]
10:39:05.735 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
10:39:05.735 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
10:39:05.735 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.735 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.735 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
10:39:05.735 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
10:39:05.735 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=invalidToken]]
10:39:05.735 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
10:39:05.735 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
10:39:05.735 [main] ERROR c.e.e.service.AuthServiceImpl - Ошибка обновление токена, пользователя Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.expensetracker.security.JwtUtil.parse(JwtUtil.java:63)
	at com.example.expensetracker.service.AuthServiceImpl.refresh(AuthServiceImpl.java:81)
	at com.example.expensetracker.controller.AuthController.refresh(AuthController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.example.expensetracker.logging.applog.AppLogFilter.doFilterInternal(AppLogFilter.java:30)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.expensetracker.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at test.controller.AuthControllerIT.refresh_shouldReturnUnauthorized_whenTokenInvalid(AuthControllerIT.java:156)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
10:39:05.735 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
10:39:05.750 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Неверные учётные данные
10:39:05.751 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.751 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@68aeae76]
10:39:05.751 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Невалидный токен]
10:39:05.768 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
10:39:05.768 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
10:39:05.768 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.768 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.768 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
10:39:05.768 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
10:39:05.769 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-52d9074d-daa2-4819-9140-91e111f120ba@example.com', passwor (truncated)...]
10:39:05.769 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-52d9074d-daa2-4819-9140-91e111f120ba@example.com
10:39:05.769 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:05.817 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.818 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.820 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-52d9074d-daa2-4819-9140-91e111f120ba@example.com
10:39:05.820 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:05.820 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@28493413]
10:39:05.834 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
10:39:05.834 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
10:39:05.834 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.834 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.834 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
10:39:05.834 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
10:39:05.835 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='test-52d9074d-daa2-4819-9140-91e111f120ba@example.com', passwor (truncated)...]
10:39:05.835 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-52d9074d-daa2-4819-9140-91e111f120ba@example.com
10:39:05.835 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
10:39:05.836 [main] WARN  c.e.e.service.AuthServiceImpl - Регистрации провалилась: почта test-52d9074d-daa2-4819-9140-91e111f120ba@example.com уже используется
10:39:05.836 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleDataIntegrityViolation(DataIntegrityViolationException, HttpServletRequest)
10:39:05.848 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/register message: Нарушение ограничений базы данных
10:39:05.848 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.848 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@709cf05b]
10:39:05.849 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: Эта почта уже используется]
10:39:05.865 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
10:39:05.865 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
10:39:05.865 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.865 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:05.865 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
10:39:05.865 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
10:39:05.865 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='Test User', email='', password=****}]
10:39:05.865 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:05.865 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=anonymous path=/api/auth/register errors=[Почта обязательна]
10:39:05.865 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.865 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3d678abb]
10:39:05.865 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.model.User> com.example.expensetracker.controller.AuthController.register(com.example.expensetracker.dto.RegisterDto): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
10:39:05.897 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.898 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.901 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.901 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.903 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/100/ban
10:39:05.903 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/100/ban
10:39:05.903 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.904 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/100/ban
10:39:05.904 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:05.904 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:05.904 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:05.907 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.908 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.909 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.910 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
10:39:05.923 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/100/ban message: Отказано в доступе
10:39:05.923 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.923 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5e104ac0]
10:39:05.923 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
10:39:05.951 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.952 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.954 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:05.955 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:05.958 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/102/ban
10:39:05.958 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/102/ban
10:39:05.958 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:05.958 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/102/ban
10:39:05.958 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:05.958 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:05.958 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:05.959 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:05.960 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:05.961 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:05.962 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
10:39:05.975 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/102/ban message: Отказано в доступе
10:39:05.975 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:05.975 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@266ac757]
10:39:05.975 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
10:39:06.004 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.005 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.007 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/104/ban
10:39:06.007 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/104/ban
10:39:06.007 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.007 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/104/ban
10:39:06.007 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:06.008 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.008 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.008 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.010 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.011 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
10:39:06.024 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/104/ban message: Некорректный запрос
10:39:06.024 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.024 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6fc4f23c]
10:39:06.025 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
10:39:06.053 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.054 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.057 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
10:39:06.057 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
10:39:06.057 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.057 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
10:39:06.057 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:06.057 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.057 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.058 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.059 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.060 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.061 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:06.075 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
10:39:06.075 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.075 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1f8e097a]
10:39:06.076 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:06.105 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
10:39:06.105 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
10:39:06.105 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.106 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
10:39:06.106 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
10:39:06.106 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.106 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.107 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.108 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
10:39:06.121 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
10:39:06.121 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.121 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@50feec08]
10:39:06.121 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
10:39:06.149 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
10:39:06.149 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
10:39:06.149 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.149 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
10:39:06.150 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
10:39:06.150 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.150 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.150 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
10:39:06.163 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
10:39:06.163 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.163 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2355d640]
10:39:06.163 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
10:39:06.192 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.193 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.196 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
10:39:06.196 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
10:39:06.196 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.196 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
10:39:06.196 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
10:39:06.197 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.197 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.198 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
10:39:06.199 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.200 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.200 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@486b61fe]
10:39:06.228 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.230 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.233 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
10:39:06.233 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
10:39:06.233 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.233 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
10:39:06.233 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:06.233 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.234 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.234 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.235 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.236 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.238 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
10:39:06.251 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
10:39:06.251 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.251 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@76e1ad79]
10:39:06.252 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
10:39:06.278 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.279 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.281 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.282 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.283 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/108/ban
10:39:06.284 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/108/ban
10:39:06.284 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.284 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/108/ban
10:39:06.284 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:06.284 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.284 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.285 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.286 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.287 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.288 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:06.289 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.291 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.291 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6da79732]
10:39:06.304 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:06.306 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.321 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.322 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.324 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/110
10:39:06.324 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/110
10:39:06.324 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.324 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/110
10:39:06.324 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
10:39:06.325 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.325 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.325 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.326 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.326 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@528973d1]
10:39:06.355 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.356 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.358 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.359 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.361 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.362 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.363 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/111/unban
10:39:06.363 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/111/unban
10:39:06.363 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.363 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/111/unban
10:39:06.364 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
10:39:06.364 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.364 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
10:39:06.365 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.366 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.366 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.367 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:06.369 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.371 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.371 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5e32f7b3]
10:39:06.383 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
10:39:06.385 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.401 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.404 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.407 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
10:39:06.407 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
10:39:06.407 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.407 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
10:39:06.407 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
10:39:06.408 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=, newPassword=newPass]]
10:39:06.411 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:06.411 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите старый пароль]
10:39:06.411 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.411 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4f9795c8]
10:39:06.411 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'oldPassword': rejected value []; codes [NotBlank.changePasswordRequest.oldPassword,NotBlank.oldPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.oldPassword,oldPassword]; arguments []; default message [oldPassword]]; default message [Введите старый пароль]] ]
10:39:06.437 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.437 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.485 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.487 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.489 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
10:39:06.489 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
10:39:06.489 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.489 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
10:39:06.490 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
10:39:06.490 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=]]
10:39:06.490 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
10:39:06.490 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите новый пароль]
10:39:06.490 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.490 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2502b85b]
10:39:06.491 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'newPassword': rejected value []; codes [NotBlank.changePasswordRequest.newPassword,NotBlank.newPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.newPassword,newPassword]; arguments []; default message [newPassword]]; default message [Введите новый пароль]] ]
10:39:06.515 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.516 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.518 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
10:39:06.518 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
10:39:06.518 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.518 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
10:39:06.518 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
10:39:06.522 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.523 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.524 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.524 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5c600e1b]
10:39:06.550 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.551 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.553 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
10:39:06.553 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
10:39:06.553 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.553 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
10:39:06.553 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
10:39:06.554 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.555 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.556 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.556 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@74109b47]
10:39:06.580 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
10:39:06.580 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
10:39:06.580 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.580 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
10:39:06.594 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.595 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.644 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.646 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.648 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
10:39:06.648 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
10:39:06.648 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.648 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
10:39:06.648 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
10:39:06.649 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=invalidPassword, newPassword=newPass]]
10:39:06.649 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.650 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.698 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
10:39:06.710 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: user@example.com path: /api/users/change-password message: Неверные учётные данные
10:39:06.710 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
10:39:06.710 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5854536a]
10:39:06.710 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный старый пароль]
10:39:06.736 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.737 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.784 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
10:39:06.784 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.788 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
10:39:06.788 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
10:39:06.788 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.788 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
10:39:06.788 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
10:39:06.788 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=newPass]]
10:39:06.788 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.788 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.882 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
10:39:06.885 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=? where id=?
10:39:06.887 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.887 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6ad90fc0]
10:39:06.913 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password) values (?,?,?,?)
10:39:06.914 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
10:39:06.916 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
10:39:06.916 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
10:39:06.916 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
10:39:06.916 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
10:39:06.916 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
10:39:06.917 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
10:39:06.918 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
10:39:06.919 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
10:39:06.919 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@55c4a338]
10:39:06.941 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
10:39:07.064 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
10:39:07.067 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
10:39:07.068 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
10:39:07.070 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
