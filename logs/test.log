09:56:28.732 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.3.Final
09:56:28.805 [main] INFO  test.controller.AdminControllerIT - Starting AdminControllerIT using Java 17.0.16 with PID 7688 (started by lamer in C:\Users\lamer\IdeaProjects\expense-tracker)
09:56:28.805 [main] INFO  test.controller.AdminControllerIT - The following 1 profile is active: "test"
09:56:29.575 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
09:56:29.577 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
09:56:29.605 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.audit.AuditRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
09:56:29.606 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.ExpenseRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
09:56:29.606 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.repository.UserRepository; If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository
09:56:29.618 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 1 Elasticsearch repository interface.
09:56:29.625 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
09:56:29.625 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
09:56:29.631 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.example.expensetracker.logging.applog.AppLogRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
09:56:29.635 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 3 JPA repository interfaces.
09:56:30.279 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 0 (http)
09:56:30.288 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
09:56:30.289 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
09:56:30.289 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
09:56:30.324 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
09:56:30.326 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1510 ms
09:56:30.832 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
09:56:30.972 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5d1a1770
09:56:30.973 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
09:56:31.100 [main] INFO  liquibase.database - Set default schema name to public
09:56:31.479 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
09:56:31.560 [main] INFO  liquibase.ui - Database is up to date, no changesets to execute
09:56:31.562 [main] INFO  liquibase.changelog - Reading from public.databasechangelog
09:56:31.569 [main] INFO  liquibase.util - UPDATE SUMMARY
09:56:31.569 [main] INFO  liquibase.util - Run:                          0
09:56:31.569 [main] INFO  liquibase.util - Previously run:               5
09:56:31.569 [main] INFO  liquibase.util - Filtered out:                 0
09:56:31.569 [main] INFO  liquibase.util - -------------------------------
09:56:31.569 [main] INFO  liquibase.util - Total change sets:            5
09:56:31.570 [main] INFO  liquibase.util - Update summary generated
09:56:31.571 [main] INFO  liquibase.command - Command execution complete
09:56:32.199 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
09:56:32.238 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
09:56:32.263 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
09:56:32.477 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
09:56:32.514 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
09:56:32.528 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 15.14
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
09:56:33.216 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
09:56:33.218 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
09:56:33.369 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
09:56:33.369 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
09:56:33.507 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
09:56:34.298 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
09:56:34.358 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
09:56:34.574 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 30 mappings in 'requestMappingHandlerMapping'
09:56:34.685 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
09:56:34.738 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, JwtAuthFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
09:56:34.778 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
09:56:34.814 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 1 ResponseBodyAdvice
09:56:34.829 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 3 @ExceptionHandler, 0 ResponseBodyAdvice
09:56:34.984 [main] DEBUG c.e.e.logging.applog.AppLogFilter - Filter 'appLogFilter' configured for use
09:56:34.985 [main] DEBUG c.e.e.security.JwtAuthFilter - Filter 'jwtAuthFilter' configured for use
09:56:34.985 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring TestDispatcherServlet ''
09:56:34.985 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
09:56:34.986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
09:56:35.019 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
09:56:35.027 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 51297 (http) with context path '/'
09:56:35.031 [main] INFO  test.controller.AdminControllerIT - Started AdminControllerIT in 6.533 seconds (process running for 7.659)
09:56:35.313 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:35.313 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:35.317 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.319 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:35.319 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:35.354 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
09:56:35.389 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:35.389 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Некорректная почта]
09:56:35.395 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:35.395 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@536eeaa7]
09:56:35.404 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@2f4d760e,.*]; default message [Некорректная почта]] ]
09:56:35.549 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:35.549 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:35.549 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.549 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:35.549 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:35.549 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
09:56:35.549 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:35.549 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Почта обязательна]
09:56:35.549 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:35.549 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@67ce8356]
09:56:35.553 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
09:56:35.597 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:35.597 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:35.598 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.598 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:35.598 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:35.599 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='not-email', password=****}]
09:56:35.599 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:35.599 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Некорректная почта]
09:56:35.600 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:35.600 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@28dd37b5]
09:56:35.600 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value [not-email]; codes [Email.registerDto.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@2f4d760e,.*]; default message [Некорректная почта]] ]
09:56:35.638 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:35.638 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:35.638 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.639 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:35.639 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:35.640 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='', password=****}]
09:56:35.640 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:35.640 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Почта обязательна]
09:56:35.640 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:35.641 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@cafee64]
09:56:35.641 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
09:56:35.711 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:35.742 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:35.745 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:35.749 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:35.749 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:35.750 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.750 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:35.750 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:35.751 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='58c1794a-2254-4728-b827-a5e12fb8a58d@example.com', password=**** (truncated)...]
09:56:35.752 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:35.757 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:35.806 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:35.819 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:35.824 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:35.884 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:35.886 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:35.888 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:35.889 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:35.895 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:35.895 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4cd9eca1]
09:56:35.920 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:35.920 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:35.920 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.920 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:35.920 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:35.920 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='58c1794a-2254-4728-b827-a5e12fb8a58d@example.com', password=**** (truncated)...]
09:56:35.921 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:35.921 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:35.922 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:35.923 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:35.925 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:35.927 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
09:56:35.943 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/moderator message: Сущность уже есть
09:56:35.944 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:35.944 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5ab7bec4]
09:56:35.944 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
09:56:35.981 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:35.983 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:35.984 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:35.986 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/76/ban
09:56:35.986 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/76/ban
09:56:35.987 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:35.987 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/76/ban
09:56:35.987 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:35.988 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:35.989 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:35.990 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:35.991 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:35.992 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
09:56:36.009 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/76/ban message: Некорректный запрос
09:56:36.010 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.010 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@579d3ee7]
09:56:36.010 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
09:56:36.047 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.048 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.049 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.052 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/ban
09:56:36.052 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/ban
09:56:36.053 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.053 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/ban
09:56:36.053 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:36.053 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.054 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.055 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.056 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.062 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:36.064 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:36.086 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/ban message: Запрошенный ресурс не найден
09:56:36.086 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.086 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@79c31740]
09:56:36.087 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:36.123 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:36.123 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:36.123 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.123 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:36.123 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.124 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='9780f41f-d934-4c0d-8ebc-15ac300f989d@example.com', password=****}]
09:56:36.125 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:36.125 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Имя пользователя не может быть пустым]
09:56:36.125 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.125 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6cfc7849]
09:56:36.126 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
09:56:36.162 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99999
09:56:36.162 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999
09:56:36.162 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.162 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99999
09:56:36.163 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
09:56:36.163 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.163 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.165 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:36.168 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
09:56:36.184 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999 message: Пользователь не найден
09:56:36.184 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.184 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@18b8390b]
09:56:36.185 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
09:56:36.225 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.227 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.228 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.230 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:36.231 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:36.231 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.231 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:36.231 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.231 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='944e2fd8-580f-4dd2-b385-815ee740352c@example.com', password=**** (truncated)...]
09:56:36.232 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.232 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.233 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.234 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.236 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:36.282 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.286 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:36.288 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.288 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.291 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:36.291 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6af8ad8b]
09:56:36.307 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:36.378 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.380 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.381 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.384 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:36.384 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:36.384 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.384 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:36.384 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.385 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='4dd255ed-532c-4cda-9614-fdc9c76c5788@example.com', password=**** (truncated)...]
09:56:36.385 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.385 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.386 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.387 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.389 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:36.433 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.438 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:36.439 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.439 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.441 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:36.441 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@32e8d5a4]
09:56:36.459 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:36.459 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:36.459 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.459 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:36.460 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.460 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='4dd255ed-532c-4cda-9614-fdc9c76c5788@example.com', password=**** (truncated)...]
09:56:36.460 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.460 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.461 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.462 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.464 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:36.465 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityExists(EntityExistsException, HttpServletRequest)
09:56:36.479 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/create/administrator message: Сущность уже есть
09:56:36.479 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.480 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1674f38d]
09:56:36.480 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityExistsException: Эта почта уже используется.]
09:56:36.513 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.514 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.515 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.517 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.518 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.521 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/83/demote
09:56:36.521 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/83/demote
09:56:36.521 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.521 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/83/demote
09:56:36.521 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:36.521 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.522 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.522 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.523 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.524 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:36.526 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:36.526 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3dcf058b]
09:56:36.561 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:36.561 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:36.561 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.561 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:36.561 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.561 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='267f5e73-b60b-4c59-9de8-70eda829490b@example.com', password=**** (truncated)...]
09:56:36.562 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:36.562 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Пароль обязателен]
09:56:36.562 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.562 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3696261e]
09:56:36.562 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
09:56:36.595 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:36.595 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:36.595 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.595 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:36.595 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.595 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='79060f24-4c7f-4a57-929b-ac1661f0d457@example.com', password=**** (truncated)...]
09:56:36.596 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:36.596 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/moderator errors=[Пароль обязателен]
09:56:36.596 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.596 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7a06ff1c]
09:56:36.597 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'password': rejected value []; codes [NotBlank.registerDto.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.password,password]; arguments []; default message [password]]; default message [Пароль обязателен]] ]
09:56:36.631 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/-1
09:56:36.631 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/-1
09:56:36.631 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.631 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/-1
09:56:36.631 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
09:56:36.631 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.631 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.635 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
09:56:36.652 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/-1 message: должно быть больше 0
09:56:36.653 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.653 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6d86d08c]
09:56:36.653 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
09:56:36.689 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.691 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.691 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.693 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/promote
09:56:36.693 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/promote
09:56:36.693 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.694 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/promote
09:56:36.694 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:36.694 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.694 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.696 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.697 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.697 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:36.699 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:36.709 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/promote message: Запрошенный ресурс не найден
09:56:36.713 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.713 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@34a78d4f]
09:56:36.713 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:36.746 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/administrator
09:56:36.746 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/administrator
09:56:36.746 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.746 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/administrator
09:56:36.746 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createAdmin(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.747 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='', email='f66f592e-e1b7-4317-b659-200113737543@example.com', password=****}]
09:56:36.748 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:36.748 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=admin@example.com path=/api/admin/users/create/administrator errors=[Имя пользователя не может быть пустым]
09:56:36.748 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.748 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@643a37b3]
09:56:36.748 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.UserDto>> com.example.expensetracker.controller.AdminController.createAdmin(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'registerDto' on field 'name': rejected value []; codes [NotBlank.registerDto.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.name,name]; arguments []; default message [name]]; default message [Имя пользователя не может быть пустым]] ]
09:56:36.780 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.782 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.782 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.784 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/demote
09:56:36.784 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/demote
09:56:36.784 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.784 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/demote
09:56:36.785 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:36.785 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.785 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.786 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.787 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.788 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:36.790 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:36.803 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/demote message: Запрошенный ресурс не найден
09:56:36.803 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.804 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1b578064]
09:56:36.804 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:36.836 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.838 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.838 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.840 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.841 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.843 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/87/delete
09:56:36.843 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/87/delete
09:56:36.843 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.844 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/87/delete
09:56:36.844 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:36.844 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.844 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.845 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.846 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.847 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:36.848 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:36.855 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:36.858 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:36.858 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@678e2172]
09:56:36.874 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:36.893 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.894 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.895 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.897 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/88/delete
09:56:36.897 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/88/delete
09:56:36.897 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.897 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/88/delete
09:56:36.897 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:36.897 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.897 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.898 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.899 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.900 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
09:56:36.914 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/88/delete message: Некорректный запрос
09:56:36.915 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:36.915 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@66876f03]
09:56:36.915 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
09:56:36.951 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:36.953 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.954 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:36.956 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/admin/users/create/moderator
09:56:36.956 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/create/moderator
09:56:36.956 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:36.956 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/admin/users/create/moderator
09:56:36.956 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#createModer(RegisterDto, UserDetailsImpl, HttpServletRequest)
09:56:36.957 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='newAdmin', email='cee4ed45-60b7-4007-b9c0-9d71c7959040@example.com', password=**** (truncated)...]
09:56:36.957 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.957 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.createModer(com.example.expensetracker.dto.RegisterDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:36.958 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:36.960 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:36.961 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:37.006 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.006 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.011 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.012 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.014 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.014 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@24b2076c]
09:56:37.033 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.055 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.056 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.056 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.059 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.060 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.060 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.063 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/92/promote
09:56:37.063 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/92/promote
09:56:37.063 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.063 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/92/promote
09:56:37.063 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.063 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.063 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.064 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.065 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.066 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.068 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.068 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6344e03b]
09:56:37.100 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.102 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.104 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users
09:56:37.104 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users
09:56:37.104 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.104 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users
09:56:37.104 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getAllUsers(Pageable, HttpServletRequest)
09:56:37.106 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.106 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.109 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
09:56:37.110 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.114 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.114 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@31ea4556]
09:56:37.116 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

09:56:37.159 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.160 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.161 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.163 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/99999/unban
09:56:37.163 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/unban
09:56:37.163 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.163 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/99999/unban
09:56:37.164 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.164 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.164 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.165 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.166 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.167 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.168 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:37.182 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/unban message: Запрошенный ресурс не найден
09:56:37.183 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:37.183 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3c41dce8]
09:56:37.183 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:37.214 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.215 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.216 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.218 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.219 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.221 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/96/demote
09:56:37.221 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/96/demote
09:56:37.221 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.221 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/96/demote
09:56:37.221 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#demoteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.221 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.221 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.demoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.222 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.223 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.224 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.225 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.225 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2cef72fc]
09:56:37.256 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.258 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.258 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.260 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.261 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.263 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/98/ban
09:56:37.263 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/98/ban
09:56:37.263 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.263 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/98/ban
09:56:37.264 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.264 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.264 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.264 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.265 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.266 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.267 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.270 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:37.272 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.272 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@64871f88]
09:56:37.286 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.289 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.306 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.308 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.310 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/users/99
09:56:37.311 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99
09:56:37.311 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.311 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/users/99
09:56:37.311 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#getUserById(long, HttpServletRequest)
09:56:37.311 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.311 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.getUserById(long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.312 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.313 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.313 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6212a4a8]
09:56:37.348 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.350 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.350 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.352 [main] DEBUG o.s.security.web.FilterChainProxy - Securing DELETE /api/admin/users/99999/delete
09:56:37.352 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/99999/delete
09:56:37.353 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.353 [main] DEBUG o.s.security.web.FilterChainProxy - Secured DELETE /api/admin/users/99999/delete
09:56:37.353 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#deleteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.353 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.353 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.deleteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.354 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.355 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.356 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.358 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:37.371 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: admin@example.com path: /api/admin/users/99999/delete message: Запрошенный ресурс не найден
09:56:37.372 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:37.372 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7e8aec90]
09:56:37.372 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:37.409 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.411 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.411 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.413 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.414 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.417 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.419 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:37.421 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/102/unban
09:56:37.421 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/102/unban
09:56:37.421 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.421 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/102/unban
09:56:37.421 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.422 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.422 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.423 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.423 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.424 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.425 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.427 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:37.429 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.429 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3da4d11f]
09:56:37.445 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.446 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.467 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.468 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.469 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.471 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.472 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.474 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/admin/users/104/promote
09:56:37.474 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/users/104/promote
09:56:37.474 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.474 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/admin/users/104/promote
09:56:37.474 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AdminController#promoteUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:37.475 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.475 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AdminController.promoteUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AdminController]
09:56:37.476 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:37.477 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.478 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.479 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.483 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.485 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.485 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@29dcb4c8]
09:56:37.509 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs
09:56:37.509 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs
09:56:37.509 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.509 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs
09:56:37.509 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getAllLogs(Pageable, HttpServletRequest)
09:56:37.509 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
09:56:37.509 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getAllLogs(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
09:56:37.622 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.622 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1b19bb0b]
09:56:37.646 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/logs/user/admin@example.com
09:56:37.646 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/logs/user/admin@example.com
09:56:37.646 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.646 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/logs/user/admin@example.com
09:56:37.647 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AppLogController#getByUser(String, Pageable, HttpServletRequest)
09:56:37.648 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
09:56:37.648 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AppLogController.getByUser(java.lang.String,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AppLogController]
09:56:37.671 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.671 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6333d09d]
09:56:37.697 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.702 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
09:56:37.706 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
09:56:37.708 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.708 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.710 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.711 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.712 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.713 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.716 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.717 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.719 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.720 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.722 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.724 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
09:56:37.724 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
09:56:37.724 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.724 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
09:56:37.724 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
09:56:37.725 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:37.725 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:37.726 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
09:56:37.728 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.729 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.730 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.730 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7171443b]
09:56:37.749 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.751 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
09:56:37.753 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
09:56:37.754 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.755 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.756 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.757 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.757 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.758 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.760 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.761 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.762 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.763 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.765 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.768 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/107
09:56:37.768 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/107
09:56:37.768 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.768 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/107
09:56:37.768 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
09:56:37.768 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:37.768 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:37.770 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
09:56:37.771 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.772 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.773 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.773 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2941052]
09:56:37.790 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.792 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
09:56:37.794 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
09:56:37.795 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.795 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.796 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.797 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.797 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.798 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.800 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.801 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.804 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.804 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.807 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.924 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:37.928 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit
09:56:37.928 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit
09:56:37.928 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:37.928 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit
09:56:37.928 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getAllAudit(Pageable, HttpServletRequest)
09:56:37.929 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:37.929 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getAllAudit(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:37.929 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 order by a1_0.time_stamp desc offset ? rows fetch first ? rows only
09:56:37.931 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.932 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:37.933 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:37.933 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@557e524c]
09:56:37.952 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:37.953 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
09:56:37.954 [main] DEBUG org.hibernate.SQL - delete from admin_audit where id=?
09:56:37.956 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false)
09:56:37.957 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.958 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:37.959 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.959 [main] DEBUG org.hibernate.SQL - delete from user_roles where user_id=?
09:56:37.960 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.961 [main] DEBUG org.hibernate.SQL - delete from users where id=?
09:56:37.963 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.964 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.966 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:37.967 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:37.969 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:38.077 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:38.080 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/admin/audit/111
09:56:38.080 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/admin/audit/111
09:56:38.080 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.080 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/admin/audit/111
09:56:38.080 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuditController#getByAdmin(Long, Pageable, HttpServletRequest)
09:56:38.080 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:38.080 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.AuditController.getByAdmin(java.lang.Long,org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.AuditController]
09:56:38.081 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0 left join users pb1_0 on pb1_0.id=a1_0.performed_by and (pb1_0.deleted = false) where pb1_0.id=? order by a1_0.time_stamp desc fetch first ? rows only
09:56:38.082 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:38.083 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:38.084 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.084 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@312c0229]
09:56:38.107 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
09:56:38.107 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
09:56:38.107 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.107 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.107 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
09:56:38.107 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
09:56:38.108 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='250bee9d-92be-482d-a8d9-67cc9fdbe9c2', email='test-4c17156e-b1c4-49f2-b2de-2f9430b (truncated)...]
09:56:38.108 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-4c17156e-b1c4-49f2-b2de-2f9430b09d7d@example.com
09:56:38.109 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:38.154 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:38.157 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:38.159 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-4c17156e-b1c4-49f2-b2de-2f9430b09d7d@example.com
09:56:38.162 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.162 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@56281f5e]
09:56:38.196 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.201 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.203 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:38.204 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:38.206 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-4c17156e-b1c4-49f2-b2de-2f9430b09d7d@example.com
09:56:38.257 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
09:56:38.257 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
09:56:38.257 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.257 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.257 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
09:56:38.257 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
09:56:38.261 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTRjMTcxNTZlLWIxYzQtNDlmMi1iMmRlLTJ (truncated)...]
09:56:38.262 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
09:56:38.262 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
09:56:38.285 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.286 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.287 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-4c17156e-b1c4-49f2-b2de-2f9430b09d7d@example.com заблокирован
09:56:38.288 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
09:56:38.302 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Отказано в доступе
09:56:38.302 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.302 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@46af240a]
09:56:38.303 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Ваш аккаунт заблокирован]
09:56:38.320 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
09:56:38.320 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
09:56:38.320 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.320 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.320 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
09:56:38.320 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
09:56:38.321 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='8a54d40b-9346-47a5-902f-049a032f0286', email='test-28302dbe-6ce4-4802-80fd-5860d6f (truncated)...]
09:56:38.321 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-28302dbe-6ce4-4802-80fd-5860d6f13cde@example.com
09:56:38.321 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:38.368 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:38.370 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:38.372 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-28302dbe-6ce4-4802-80fd-5860d6f13cde@example.com
09:56:38.373 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.373 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@46b5b14f]
09:56:38.389 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
09:56:38.389 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
09:56:38.389 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.389 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.389 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
09:56:38.389 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
09:56:38.391 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-28302dbe-6ce4-4802-80fd-5860d6f13cde@example.com, password=invalidPassword]]
09:56:38.391 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-28302dbe-6ce4-4802-80fd-5860d6f13cde@example.com
09:56:38.392 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.393 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.440 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: не верный пароль для почты test-28302dbe-6ce4-4802-80fd-5860d6f13cde@example.com
09:56:38.440 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
09:56:38.454 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
09:56:38.454 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.454 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@68b366bd]
09:56:38.454 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный пароль]
09:56:38.471 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
09:56:38.471 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
09:56:38.471 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.471 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.471 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
09:56:38.471 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
09:56:38.472 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-05565a7e-7e09-4287-8ce5-17738534e5c6@example.com, password=123]]
09:56:38.472 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-05565a7e-7e09-4287-8ce5-17738534e5c6@example.com
09:56:38.473 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.473 [main] WARN  c.e.e.service.AuthServiceImpl - Авторизация провалилась: почта test-05565a7e-7e09-4287-8ce5-17738534e5c6@example.com не найдена
09:56:38.474 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
09:56:38.483 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/login message: Неверные учётные данные
09:56:38.483 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.483 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@15537f0a]
09:56:38.483 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверная почта]
09:56:38.503 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-bad2e5eb-7aa0-4b01-a04e-fc84867b29a3@example.com
09:56:38.504 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
09:56:38.504 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
09:56:38.505 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.505 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.505 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
09:56:38.505 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
09:56:38.505 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LWJhZDJlNWViLTdhYTAtNGIwMS1hMDRlLWZ (truncated)...]
09:56:38.505 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
09:56:38.505 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
09:56:38.506 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.507 [main] WARN  c.e.e.service.AuthServiceImpl - Неудачная попытка обновления токена, пользователь test-bad2e5eb-7aa0-4b01-a04e-fc84867b29a3@example.com не найден
09:56:38.507 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUsernameNotFound(UsernameNotFoundException, HttpServletRequest)
09:56:38.522 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Пользователь не найден
09:56:38.522 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.522 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@56445c7a]
09:56:38.522 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.core.userdetails.UsernameNotFoundException: Пользователь не найден]
09:56:38.543 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
09:56:38.543 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
09:56:38.543 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.544 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.544 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
09:56:38.544 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
09:56:38.544 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com', password=*** (truncated)...]
09:56:38.544 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.545 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:38.592 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:38.593 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:38.595 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.595 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.595 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@23ff20e9]
09:56:38.609 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/login
09:56:38.609 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/login
09:56:38.609 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.609 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.609 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/login
09:56:38.609 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#login(LoginRequest)
09:56:38.609 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com, password=123]]
09:56:38.609 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка авторизации: test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.611 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.611 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.658 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная авторизация: test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.658 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.658 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.658 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.658 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTNlZjNiMGJkLTdmZjgtNDI0My1hYjA1LTBlN (truncated)...]
09:56:38.685 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
09:56:38.685 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
09:56:38.685 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.685 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.685 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
09:56:38.685 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
09:56:38.685 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTNlZjNiMGJkLTdmZjgtNDI0My1hYjA1LTB (truncated)...]
09:56:38.685 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
09:56:38.685 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
09:56:38.689 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.690 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.691 [main] INFO  c.e.e.service.AuthServiceImpl - Успешное обновление токена, пользователя test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.691 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан access-токен для test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.691 [main] INFO  c.e.expensetracker.security.JwtUtil - Создан refresh-токен для test-3ef3b0bd-7ff8-4243-ab05-0e7d5828173b@example.com
09:56:38.692 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.692 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [TokenResponse[accessToken=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0LTNlZjNiMGJkLTdmZjgtNDI0My1hYjA1LTBlN (truncated)...]
09:56:38.708 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/refresh
09:56:38.708 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/refresh
09:56:38.708 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.708 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.708 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/refresh
09:56:38.708 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#refresh(RefreshRequest)
09:56:38.708 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RefreshRequest[refreshToken=invalidToken]]
09:56:38.708 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка обновления токена
09:56:38.708 [main] INFO  c.e.expensetracker.security.JwtUtil - Анализ токена
09:56:38.708 [main] ERROR c.e.e.service.AuthServiceImpl - Ошибка обновление токена, пользователя Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.example.expensetracker.security.JwtUtil.parse(JwtUtil.java:63)
	at com.example.expensetracker.service.AuthServiceImpl.refresh(AuthServiceImpl.java:81)
	at com.example.expensetracker.controller.AuthController.refresh(AuthController.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.example.expensetracker.logging.applog.AppLogFilter.doFilterInternal(AppLogFilter.java:30)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.example.expensetracker.security.JwtAuthFilter.doFilterInternal(JwtAuthFilter.java:50)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at test.controller.AuthControllerIT.refresh_shouldReturnUnauthorized_whenTokenInvalid(AuthControllerIT.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)
	at org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)
	at org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)
	at org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
09:56:38.712 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
09:56:38.728 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/refresh message: Неверные учётные данные
09:56:38.728 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.728 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@30f1c5b9]
09:56:38.728 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Невалидный токен]
09:56:38.745 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
09:56:38.745 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
09:56:38.745 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.745 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.745 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
09:56:38.745 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
09:56:38.745 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-7ccb8621-f04a-4c8e-a860-8991b700a13b@example.com', password=*** (truncated)...]
09:56:38.745 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-7ccb8621-f04a-4c8e-a860-8991b700a13b@example.com
09:56:38.746 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:38.799 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:38.803 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:38.805 [main] INFO  c.e.e.service.AuthServiceImpl - Успешная регистрация: test-7ccb8621-f04a-4c8e-a860-8991b700a13b@example.com
09:56:38.805 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.805 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.model.User@e769504]
09:56:38.820 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
09:56:38.820 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
09:56:38.820 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.820 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.820 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
09:56:38.820 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
09:56:38.821 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='test-7ccb8621-f04a-4c8e-a860-8991b700a13b@example.com', password=*** (truncated)...]
09:56:38.821 [main] DEBUG c.e.e.service.AuthServiceImpl - Попытка регистрации: test-7ccb8621-f04a-4c8e-a860-8991b700a13b@example.com
09:56:38.822 [main] DEBUG org.hibernate.SQL - select u1_0.id from users u1_0 where (u1_0.deleted = false) and u1_0.email=? fetch first ? rows only
09:56:38.823 [main] WARN  c.e.e.service.AuthServiceImpl - Регистрации провалилась: почта test-7ccb8621-f04a-4c8e-a860-8991b700a13b@example.com уже используется
09:56:38.823 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleDataIntegrityViolation(DataIntegrityViolationException, HttpServletRequest)
09:56:38.837 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: anonymous path: /api/auth/register message: Нарушение ограничений базы данных
09:56:38.837 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.837 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6afcdf0]
09:56:38.837 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: Эта почта уже используется]
09:56:38.855 [main] DEBUG o.s.security.web.FilterChainProxy - Securing POST /api/auth/register
09:56:38.855 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/auth/register
09:56:38.855 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.856 [main] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
09:56:38.856 [main] DEBUG o.s.security.web.FilterChainProxy - Secured POST /api/auth/register
09:56:38.856 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.AuthController#register(RegisterDto)
09:56:38.856 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterDto{name='User', email='', password=****}]
09:56:38.856 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:38.856 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=anonymous path=/api/auth/register errors=[Почта обязательна]
09:56:38.856 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:38.856 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@193cafcb]
09:56:38.857 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.model.User> com.example.expensetracker.controller.AuthController.register(com.example.expensetracker.dto.RegisterDto): [Field error in object 'registerDto' on field 'email': rejected value []; codes [NotBlank.registerDto.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerDto.email,email]; arguments []; default message [email]]; default message [Почта обязательна]] ]
09:56:38.898 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:38.899 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:38.902 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.903 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.904 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/report
09:56:38.904 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/report
09:56:38.904 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.904 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/report
09:56:38.905 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#report(DateRangeDto, UserDetailsImpl, HttpServletRequest)
09:56:38.923 [main] DEBUG org.hibernate.SQL - select coalesce(c1_0.name,'UNCATEGORIZED'),sum(e1_0.amount) from expenses e1_0 left join categories c1_0 on c1_0.id=e1_0.category_id where e1_0.user_id=? and e1_0.occurred_at between ? and ? group by c1_0.name
09:56:38.933 [main] DEBUG org.hibernate.SQL - select coalesce(sum(e1_0.amount),0) from expenses e1_0 where e1_0.user_id=? and e1_0.occurred_at between ? and ?
09:56:38.934 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.934 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3f236b2a]
09:56:38.972 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:38.973 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:38.976 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:38.977 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:38.979 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/total
09:56:38.979 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/total
09:56:38.979 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:38.979 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/total
09:56:38.979 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#getTotal(UserDetailsImpl, HttpServletRequest)
09:56:38.983 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:38.985 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:38.985 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@46f73f2d]
09:56:39.020 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.021 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.024 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.025 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.026 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/expenses/report
09:56:39.026 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/expenses/report
09:56:39.026 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.026 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/expenses/report
09:56:39.026 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ExpenseController#report(DateRangeDto, UserDetailsImpl, HttpServletRequest)
09:56:39.027 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:39.027 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/expenses/report errors=[from должен быть раньше to]
09:56:39.027 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.027 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@95d05dd]
09:56:39.027 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<com.example.expensetracker.dto.ExpensesReportDto>> com.example.expensetracker.controller.ExpenseController.report(com.example.expensetracker.dto.DateRangeDto,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'dateRangeDto' on field 'validRange': rejected value [false]; codes [AssertTrue.dateRangeDto.validRange,AssertTrue.validRange,AssertTrue.boolean,AssertTrue]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [dateRangeDto.validRange,validRange]; arguments []; default message [validRange]]; default message [from должен быть раньше to]] ]
09:56:39.066 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.067 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.067 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.070 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.071 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.072 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.073 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.073 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.076 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/121/ban
09:56:39.076 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/121/ban
09:56:39.076 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.076 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/121/ban
09:56:39.076 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.077 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.077 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.079 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.080 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.081 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.083 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
09:56:39.098 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/121/ban message: Отказано в доступе
09:56:39.098 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.098 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6b9f7b56]
09:56:39.098 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
09:56:39.128 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.129 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.130 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.132 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.133 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.134 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.135 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.136 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.138 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/123/ban
09:56:39.138 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/123/ban
09:56:39.138 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.138 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/123/ban
09:56:39.138 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.138 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.138 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.139 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.140 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.140 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.142 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleAccessDenied(AccessDeniedException, HttpServletRequest)
09:56:39.155 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/123/ban message: Отказано в доступе
09:56:39.155 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.155 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4eda81fb]
09:56:39.155 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Отказано в доступе]
09:56:39.186 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.187 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.188 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.191 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.191 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.193 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/124/ban
09:56:39.193 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/124/ban
09:56:39.193 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.193 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/124/ban
09:56:39.193 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.193 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.193 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.194 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.194 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.196 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleIllegalArgument(IllegalArgumentException, HttpServletRequest)
09:56:39.208 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/124/ban message: Некорректный запрос
09:56:39.208 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.208 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6613de96]
09:56:39.209 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.IllegalArgumentException: Нельзя выполнить действие над самим собой]
09:56:39.244 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.245 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.247 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.249 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.250 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.265 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.266 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.267 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.269 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/ban
09:56:39.269 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/ban
09:56:39.269 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.269 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/ban
09:56:39.269 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.269 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.269 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.270 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.271 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.271 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.273 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:39.285 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/ban message: Запрошенный ресурс не найден
09:56:39.285 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.285 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5360d81f]
09:56:39.286 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:39.317 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.318 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.319 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.321 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.322 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.323 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/99999
09:56:39.323 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999
09:56:39.323 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.323 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/99999
09:56:39.323 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
09:56:39.323 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.323 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.324 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.325 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleUserNotFoundById(UserNotFoundByIdException, HttpServletRequest)
09:56:39.338 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999 message: Пользователь не найден
09:56:39.338 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.338 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@38a76720]
09:56:39.338 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.example.expensetracker.exception.UserNotFoundByIdException: Пользователь с ID 99999 не найден]
09:56:39.370 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.372 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.372 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.374 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.375 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.376 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/-1
09:56:39.376 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/-1
09:56:39.376 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.376 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/-1
09:56:39.376 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
09:56:39.377 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.377 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.377 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleConstraintViolation(ConstraintViolationException, HttpServletRequest)
09:56:39.390 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/-1 message: должно быть больше 0
09:56:39.390 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.390 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@6df43735]
09:56:39.391 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.validation.ConstraintViolationException: getUserById.id: должно быть больше 0]
09:56:39.421 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.422 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.423 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.426 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.427 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.428 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.428 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.430 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users
09:56:39.430 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users
09:56:39.430 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.430 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users
09:56:39.430 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getAllUsers(Pageable, HttpServletRequest)
09:56:39.431 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.431 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getAllUsers(org.springframework.data.domain.Pageable,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.432 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) order by u1_0.id offset ? rows fetch first ? rows only
09:56:39.433 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.434 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.435 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:39.435 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@2a62f277]
09:56:39.467 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.468 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.468 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.471 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.471 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.487 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.488 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.489 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.490 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/99999/unban
09:56:39.491 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/99999/unban
09:56:39.491 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.491 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/99999/unban
09:56:39.491 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.491 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.491 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.492 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.493 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.493 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.495 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleEntityNotFound(EntityNotFoundException, HttpServletRequest)
09:56:39.509 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: moderator@example.com path: /api/moderator/users/99999/unban message: Запрошенный ресурс не найден
09:56:39.509 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.509 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@1b690653]
09:56:39.510 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [jakarta.persistence.EntityNotFoundException: Пользователь не найден]
09:56:39.544 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.546 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.546 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.549 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.550 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.551 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.552 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.554 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/134/ban
09:56:39.554 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/134/ban
09:56:39.554 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.555 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/134/ban
09:56:39.555 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#banUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.555 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.555 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.banUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.556 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.556 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.557 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.558 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:39.560 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:39.562 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:39.562 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@4669cd2]
09:56:39.577 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:39.579 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.599 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.601 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.601 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.604 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.604 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.605 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.606 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.608 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/moderator/users/136
09:56:39.608 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/136
09:56:39.608 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.608 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/moderator/users/136
09:56:39.608 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#getUserById(Long, HttpServletRequest)
09:56:39.608 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.608 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.getUserById(java.lang.Long,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.609 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.610 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:39.610 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@279ffa80]
09:56:39.638 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.642 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.643 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.645 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.646 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.661 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.662 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.665 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.665 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:39.667 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.668 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.669 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.670 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/moderator/users/138/unban
09:56:39.670 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/moderator/users/138/unban
09:56:39.671 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.671 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/moderator/users/138/unban
09:56:39.671 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.ModeratorController#unbanUser(Long, UserDetailsImpl, HttpServletRequest)
09:56:39.671 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.671 [main] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.example.expensetracker.controller.ModeratorController.unbanUser(java.lang.Long,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest); target is of class [com.example.expensetracker.controller.ModeratorController]
09:56:39.671 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.672 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.673 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.675 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:39.676 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:39.678 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:39.678 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@7a1bbd27]
09:56:39.692 [main] DEBUG org.hibernate.SQL - select a1_0.id,a1_0.action,a1_0.performed_by,a1_0.target_user_id,a1_0.time_stamp from admin_audit a1_0
09:56:39.694 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.716 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.717 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.762 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.767 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:39.769 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
09:56:39.769 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
09:56:39.770 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.770 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
09:56:39.770 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
09:56:39.771 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=]]
09:56:39.773 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:39.773 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите новый пароль]
09:56:39.773 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.773 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@e442d42]
09:56:39.773 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'newPassword': rejected value []; codes [NotBlank.changePasswordRequest.newPassword,NotBlank.newPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.newPassword,newPassword]; arguments []; default message [newPassword]]; default message [Введите новый пароль]] ]
09:56:39.804 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.805 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.807 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
09:56:39.807 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
09:56:39.807 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.807 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
09:56:39.807 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
09:56:39.807 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=, newPassword=newPass]]
09:56:39.808 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpServletRequest)
09:56:39.808 [main] WARN  c.e.e.e.GlobalExceptionHandler - Validation error: user=user@example.com path=/api/users/change-password errors=[Введите старый пароль]
09:56:39.808 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:39.808 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3baf166a]
09:56:39.808 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.example.expensetracker.dto.ApiResponse<java.lang.String>> com.example.expensetracker.controller.UserController.changePassword(com.example.expensetracker.dto.ChangePasswordRequest,com.example.expensetracker.details.UserDetailsImpl,jakarta.servlet.http.HttpServletRequest): [Field error in object 'changePasswordRequest' on field 'oldPassword': rejected value []; codes [NotBlank.changePasswordRequest.oldPassword,NotBlank.oldPassword,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [changePasswordRequest.oldPassword,oldPassword]; arguments []; default message [oldPassword]]; default message [Введите старый пароль]] ]
09:56:39.841 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.842 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.842 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.845 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
09:56:39.845 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
09:56:39.845 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.845 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
09:56:39.845 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
09:56:39.846 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.847 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.848 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:39.848 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3f762c75]
09:56:39.879 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.880 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.882 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
09:56:39.882 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
09:56:39.882 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.883 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
09:56:39.883 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
09:56:39.883 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:39.884 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:39.885 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:39.885 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5d89f29f]
09:56:39.917 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
09:56:39.917 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
09:56:39.917 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.917 [main] WARN  c.e.e.security.JwtAuthFilter - Отсутствует токен - пользователь не аутентифицирован
09:56:39.935 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:39.936 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:39.990 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:39.994 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:39.997 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
09:56:39.997 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
09:56:39.997 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:39.997 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
09:56:39.997 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
09:56:39.998 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=invalidPassword, newPassword=newPass]]
09:56:39.999 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:40.000 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:40.050 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.example.expensetracker.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException, HttpServletRequest)
09:56:40.067 [main] WARN  c.e.e.e.GlobalExceptionHandler - GlobalExceptionHandler: user: user@example.com path: /api/users/change-password message: Неверные учётные данные
09:56:40.067 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
09:56:40.067 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@5a30dead]
09:56:40.067 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Неверный старый пароль]
09:56:40.107 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:40.108 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:40.154 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,r1_0.user_id,r1_0.role,u1_0.total_expenses from users u1_0 left join user_roles r1_0 on u1_0.id=r1_0.user_id where u1_0.id=? and (u1_0.deleted = false)
09:56:40.158 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:40.160 [main] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /api/users/change-password
09:56:40.160 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/change-password
09:56:40.160 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:40.160 [main] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /api/users/change-password
09:56:40.160 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#changePassword(ChangePasswordRequest, UserDetailsImpl, HttpServletRequest)
09:56:40.160 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ChangePasswordRequest[oldPassword=123, newPassword=newPass]]
09:56:40.161 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:40.162 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:40.252 [main] DEBUG org.hibernate.SQL - insert into admin_audit (action,performed_by,target_user_id,time_stamp) values (?,?,?,?)
09:56:40.257 [main] DEBUG org.hibernate.SQL - update users set banned=?,deleted=?,email=?,password=?,total_expenses=? where id=?
09:56:40.259 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:40.259 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@3511eb95]
09:56:40.291 [main] DEBUG org.hibernate.SQL - insert into users (banned,deleted,email,password,total_expenses) values (?,?,?,?,?)
09:56:40.292 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:40.293 [main] DEBUG org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
09:56:40.295 [main] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/users/me
09:56:40.295 [main] INFO  c.e.e.security.JwtAuthFilter - Мы внутри фильтра! URI: /api/users/me
09:56:40.295 [main] INFO  c.e.e.security.JwtAuthFilter - Заголовок входящей авторизации: null
09:56:40.295 [main] DEBUG o.s.security.web.FilterChainProxy - Secured GET /api/users/me
09:56:40.295 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.example.expensetracker.controller.UserController#getCurrentUser(UserDetailsImpl, HttpServletRequest)
09:56:40.296 [main] DEBUG org.hibernate.SQL - select u1_0.id,u1_0.banned,u1_0.deleted,u1_0.email,u1_0.password,u1_0.total_expenses from users u1_0 where (u1_0.deleted = false) and u1_0.email=?
09:56:40.297 [main] DEBUG org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
09:56:40.297 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]
09:56:40.297 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.example.expensetracker.dto.ApiResponse@593545ed]
09:56:40.318 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
09:56:40.438 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
09:56:40.462 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
09:56:40.463 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
09:56:40.464 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
